{"ast":null,"code":"import { jsonStringify } from './utils';\nexport var ErrorSource = {\n  AGENT: 'agent',\n  CONSOLE: 'console',\n  CUSTOM: 'custom',\n  LOGGER: 'logger',\n  NETWORK: 'network',\n  SOURCE: 'source'\n};\nexport var ErrorHandling;\n(function (ErrorHandling) {\n  ErrorHandling[\"HANDLED\"] = \"handled\";\n  ErrorHandling[\"UNHANDLED\"] = \"unhandled\";\n})(ErrorHandling || (ErrorHandling = {}));\nexport function formatUnknownError(stackTrace, errorObject, nonErrorPrefix) {\n  if (!stackTrace || stackTrace.message === undefined && !(errorObject instanceof Error)) {\n    return {\n      message: nonErrorPrefix + \" \" + jsonStringify(errorObject),\n      stack: 'No stack, consider using an instance of Error',\n      type: stackTrace && stackTrace.name\n    };\n  }\n  return {\n    message: stackTrace.message || 'Empty message',\n    stack: toStackTraceString(stackTrace),\n    type: stackTrace.name\n  };\n}\nexport function toStackTraceString(stack) {\n  var result = formatErrorMessage(stack);\n  stack.stack.forEach(function (frame) {\n    var func = frame.func === '?' ? '<anonymous>' : frame.func;\n    var args = frame.args && frame.args.length > 0 ? \"(\" + frame.args.join(', ') + \")\" : '';\n    var line = frame.line ? \":\" + frame.line : '';\n    var column = frame.line && frame.column ? \":\" + frame.column : '';\n    result += \"\\n  at \" + func + args + \" @ \" + frame.url + line + column;\n  });\n  return result;\n}\nexport function formatErrorMessage(stack) {\n  return (stack.name || 'Error') + \": \" + stack.message;\n}","map":{"version":3,"names":["jsonStringify","ErrorSource","AGENT","CONSOLE","CUSTOM","LOGGER","NETWORK","SOURCE","ErrorHandling","formatUnknownError","stackTrace","errorObject","nonErrorPrefix","message","undefined","Error","stack","type","name","toStackTraceString","result","formatErrorMessage","forEach","frame","func","args","length","join","line","column","url"],"sources":["../../src/tools/error.ts"],"sourcesContent":[null],"mappings":"AAEA,SAASA,aAAa,QAAQ,SAAS;AAiBvC,OAAO,IAAMC,WAAW,GAAG;EACzBC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE,QAAQ;EAChBC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE;CACA;AAEV,WAAYC,aAGX;AAHD,WAAYA,aAAa;EACvBA,aAAA,uBAAmB;EACnBA,aAAA,2BAAuB;AACzB,CAAC,EAHWA,aAAa,KAAbA,aAAa;AAQzB,OAAM,SAAUC,kBAAkBA,CAACC,UAAkC,EAAEC,WAAgB,EAAEC,cAAsB;EAC7G,IAAI,CAACF,UAAU,IAAKA,UAAU,CAACG,OAAO,KAAKC,SAAS,IAAI,EAAEH,WAAW,YAAYI,KAAK,CAAE,EAAE;IACxF,OAAO;MACLF,OAAO,EAAKD,cAAc,SAAIZ,aAAa,CAACW,WAAW,CAAI;MAC3DK,KAAK,EAAE,+CAA+C;MACtDC,IAAI,EAAEP,UAAU,IAAIA,UAAU,CAACQ;KAChC;;EAGH,OAAO;IACLL,OAAO,EAAEH,UAAU,CAACG,OAAO,IAAI,eAAe;IAC9CG,KAAK,EAAEG,kBAAkB,CAACT,UAAU,CAAC;IACrCO,IAAI,EAAEP,UAAU,CAACQ;GAClB;AACH;AAEA,OAAM,SAAUC,kBAAkBA,CAACH,KAAiB;EAClD,IAAII,MAAM,GAAGC,kBAAkB,CAACL,KAAK,CAAC;EACtCA,KAAK,CAACA,KAAK,CAACM,OAAO,CAAC,UAACC,KAAK;IACxB,IAAMC,IAAI,GAAGD,KAAK,CAACC,IAAI,KAAK,GAAG,GAAG,aAAa,GAAGD,KAAK,CAACC,IAAI;IAC5D,IAAMC,IAAI,GAAGF,KAAK,CAACE,IAAI,IAAIF,KAAK,CAACE,IAAI,CAACC,MAAM,GAAG,CAAC,GAAG,MAAIH,KAAK,CAACE,IAAI,CAACE,IAAI,CAAC,IAAI,CAAC,MAAG,GAAG,EAAE;IACpF,IAAMC,IAAI,GAAGL,KAAK,CAACK,IAAI,GAAG,MAAIL,KAAK,CAACK,IAAM,GAAG,EAAE;IAC/C,IAAMC,MAAM,GAAGN,KAAK,CAACK,IAAI,IAAIL,KAAK,CAACM,MAAM,GAAG,MAAIN,KAAK,CAACM,MAAQ,GAAG,EAAE;IACnET,MAAM,IAAI,YAAUI,IAAK,GAAGC,IAAI,WAAMF,KAAK,CAACO,GAAI,GAAGF,IAAI,GAAGC,MAAQ;EACpE,CAAC,CAAC;EACF,OAAOT,MAAM;AACf;AAEA,OAAM,SAAUC,kBAAkBA,CAACL,KAAiB;EAClD,OAAO,CAAGA,KAAK,CAACE,IAAI,IAAI,OAAO,WAAKF,KAAK,CAACH,OAAU;AACtD","ignoreList":[]},"metadata":{},"sourceType":"module"}