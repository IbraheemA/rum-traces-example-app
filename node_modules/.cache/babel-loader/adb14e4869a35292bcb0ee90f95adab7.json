{"ast":null,"code":"'use strict';\n\nconst {\n  AsyncLocalStorage\n} = require('async_hooks');\nconst {\n  trace,\n  ROOT_CONTEXT\n} = require('@opentelemetry/api');\nconst DataDogSpanContext = require('../opentracing/span_context');\nconst SpanContext = require('./span_context');\nconst tracer = require('../../');\nclass ContextManager {\n  constructor() {\n    this._store = new AsyncLocalStorage();\n  }\n  active() {\n    const activeSpan = tracer.scope().active();\n    const store = this._store.getStore();\n    const context = activeSpan && activeSpan.context() || store || ROOT_CONTEXT;\n    if (!(context instanceof DataDogSpanContext)) {\n      return context;\n    }\n    if (!context._otelSpanContext) {\n      const newSpanContext = new SpanContext(context);\n      context._otelSpanContext = newSpanContext;\n    }\n    if (store && trace.getSpanContext(store) === context._otelSpanContext) {\n      return store;\n    }\n    return trace.setSpanContext(store || ROOT_CONTEXT, context._otelSpanContext);\n  }\n  with(context, fn, thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      args[_key - 3] = arguments[_key];\n    }\n    const span = trace.getSpan(context);\n    const ddScope = tracer.scope();\n    const run = () => {\n      const cb = thisArg == null ? fn : fn.bind(thisArg);\n      return this._store.run(context, cb, ...args);\n    };\n    if (span && span._ddSpan) {\n      return ddScope.activate(span._ddSpan, run);\n    }\n    return run();\n  }\n  bind(context, target) {\n    const self = this;\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return self.with(context, target, this, ...args);\n    };\n  }\n  enable() {}\n  disable() {}\n}\nmodule.exports = ContextManager;","map":{"version":3,"names":["AsyncLocalStorage","require","trace","ROOT_CONTEXT","DataDogSpanContext","SpanContext","tracer","ContextManager","constructor","_store","active","activeSpan","scope","store","getStore","context","_otelSpanContext","newSpanContext","getSpanContext","setSpanContext","with","fn","thisArg","_len","arguments","length","args","Array","_key","span","getSpan","ddScope","run","cb","bind","_ddSpan","activate","target","self","_len2","_key2","enable","disable","module","exports"],"sources":["/Users/ibraheem.aboulnaga/rum-traces-example-app/node_modules/dd-trace/packages/dd-trace/src/opentelemetry/context_manager.js"],"sourcesContent":["'use strict'\n\nconst { AsyncLocalStorage } = require('async_hooks')\nconst { trace, ROOT_CONTEXT } = require('@opentelemetry/api')\nconst DataDogSpanContext = require('../opentracing/span_context')\n\nconst SpanContext = require('./span_context')\nconst tracer = require('../../')\n\nclass ContextManager {\n  constructor () {\n    this._store = new AsyncLocalStorage()\n  }\n\n  active () {\n    const activeSpan = tracer.scope().active()\n    const store = this._store.getStore()\n    const context = (activeSpan && activeSpan.context()) || store || ROOT_CONTEXT\n\n    if (!(context instanceof DataDogSpanContext)) {\n      return context\n    }\n\n    if (!context._otelSpanContext) {\n      const newSpanContext = new SpanContext(context)\n      context._otelSpanContext = newSpanContext\n    }\n    if (store && trace.getSpanContext(store) === context._otelSpanContext) {\n      return store\n    }\n    return trace.setSpanContext(store || ROOT_CONTEXT, context._otelSpanContext)\n  }\n\n  with (context, fn, thisArg, ...args) {\n    const span = trace.getSpan(context)\n    const ddScope = tracer.scope()\n    const run = () => {\n      const cb = thisArg == null ? fn : fn.bind(thisArg)\n      return this._store.run(context, cb, ...args)\n    }\n    if (span && span._ddSpan) {\n      return ddScope.activate(span._ddSpan, run)\n    }\n    return run()\n  }\n\n  bind (context, target) {\n    const self = this\n    return function (...args) {\n      return self.with(context, target, this, ...args)\n    }\n  }\n\n  enable () {}\n  disable () {}\n}\nmodule.exports = ContextManager\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}