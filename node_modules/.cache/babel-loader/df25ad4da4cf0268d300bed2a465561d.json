{"ast":null,"code":"'use strict';\n\nconst NoopProxy = require('./noop/proxy');\nconst DatadogTracer = require('./tracer');\nconst Config = require('./config');\nconst runtimeMetrics = require('./runtime_metrics');\nconst log = require('./log');\nconst {\n  setStartupLogPluginManager\n} = require('./startup-log');\nconst DynamicInstrumentation = require('./debugger');\nconst telemetry = require('./telemetry');\nconst nomenclature = require('./service-naming');\nconst PluginManager = require('./plugin_manager');\nconst remoteConfig = require('./appsec/remote_config');\nconst AppsecSdk = require('./appsec/sdk');\nconst dogstatsd = require('./dogstatsd');\nconst NoopDogStatsDClient = require('./noop/dogstatsd');\nconst spanleak = require('./spanleak');\nconst {\n  SSIHeuristics\n} = require('./profiling/ssi-heuristics');\nconst appsecStandalone = require('./appsec/standalone');\nconst LLMObsSDK = require('./llmobs/sdk');\nclass LazyModule {\n  constructor(provider) {\n    this.provider = provider;\n  }\n  enable() {\n    this.module = this.provider();\n    this.module.enable(...arguments);\n  }\n  disable() {\n    this.module?.disable();\n  }\n}\nclass Tracer extends NoopProxy {\n  constructor() {\n    super();\n    this._initialized = false;\n    this._nomenclature = nomenclature;\n    this._pluginManager = new PluginManager(this);\n    this.dogstatsd = new NoopDogStatsDClient();\n    this._tracingInitialized = false;\n    this._flare = new LazyModule(() => require('./flare'));\n\n    // these requires must work with esm bundler\n    this._modules = {\n      appsec: new LazyModule(() => require('./appsec')),\n      iast: new LazyModule(() => require('./appsec/iast')),\n      llmobs: new LazyModule(() => require('./llmobs'))\n    };\n  }\n  init(options) {\n    if (this._initialized) return this;\n    this._initialized = true;\n    try {\n      const config = new Config(options); // TODO: support dynamic code config\n\n      if (config.crashtracking.enabled) {\n        require('./crashtracking').start(config);\n      }\n      telemetry.start(config, this._pluginManager);\n      if (config.dogstatsd) {\n        // Custom Metrics\n        this.dogstatsd = new dogstatsd.CustomMetrics(config);\n        setInterval(() => {\n          this.dogstatsd.flush();\n        }, 10 * 1000).unref();\n        process.once('beforeExit', () => {\n          this.dogstatsd.flush();\n        });\n      }\n      if (config.spanLeakDebug > 0) {\n        if (config.spanLeakDebug === spanleak.MODES.LOG) {\n          spanleak.enableLogging();\n        } else if (config.spanLeakDebug === spanleak.MODES.GC_AND_LOG) {\n          spanleak.enableGarbageCollection();\n        }\n        spanleak.startScrubber();\n      }\n      if (config.remoteConfig.enabled && !config.isCiVisibility) {\n        const rc = remoteConfig.enable(config, this._modules.appsec);\n        rc.setProductHandler('APM_TRACING', (action, conf) => {\n          if (action === 'unapply') {\n            config.configure({}, true);\n          } else {\n            config.configure(conf.lib_config, true);\n          }\n          this._enableOrDisableTracing(config);\n        });\n        rc.setProductHandler('AGENT_CONFIG', (action, conf) => {\n          if (!conf?.name?.startsWith('flare-log-level.')) return;\n          if (action === 'unapply') {\n            this._flare.disable();\n          } else if (conf.config?.log_level) {\n            this._flare.enable(config);\n            this._flare.module.prepare(conf.config.log_level);\n          }\n        });\n        rc.setProductHandler('AGENT_TASK', (action, conf) => {\n          if (action === 'unapply' || !conf) return;\n          if (conf.task_type !== 'tracer_flare' || !conf.args) return;\n          this._flare.enable(config);\n          this._flare.module.send(conf.args);\n        });\n        if (config.dynamicInstrumentationEnabled) {\n          DynamicInstrumentation.start(config, rc);\n        }\n      }\n      if (config.isGCPFunction || config.isAzureFunction) {\n        require('./serverless').maybeStartServerlessMiniAgent(config);\n      }\n      if (config.profiling.enabled !== 'false') {\n        const ssiHeuristics = new SSIHeuristics(config);\n        ssiHeuristics.start();\n        let mockProfiler = null;\n        if (config.profiling.enabled === 'true') {\n          this._profilerStarted = this._startProfiler(config);\n        } else if (ssiHeuristics.emitsTelemetry) {\n          // Start a mock profiler that emits mock profile-submitted events for the telemetry.\n          // It will be stopped if the real profiler is started by the heuristics.\n          mockProfiler = require('./profiling/ssi-telemetry-mock-profiler');\n          mockProfiler.start(config);\n        }\n        if (ssiHeuristics.heuristicsActive) {\n          ssiHeuristics.onTriggered(() => {\n            if (mockProfiler) {\n              mockProfiler.stop();\n            }\n            this._startProfiler(config);\n            ssiHeuristics.onTriggered(); // deregister this callback\n          });\n        }\n        if (!this._profilerStarted) {\n          this._profilerStarted = Promise.resolve(false);\n        }\n      }\n      if (config.runtimeMetrics) {\n        runtimeMetrics.start(config);\n      }\n      this._enableOrDisableTracing(config);\n      if (config.tracing) {\n        if (config.isManualApiEnabled) {\n          const TestApiManualPlugin = require('./ci-visibility/test-api-manual/test-api-manual-plugin');\n          this._testApiManualPlugin = new TestApiManualPlugin(this);\n          this._testApiManualPlugin.configure({\n            ...config,\n            enabled: true\n          });\n        }\n      }\n      if (config.ciVisAgentlessLogSubmissionEnabled) {\n        if (process.env.DD_API_KEY) {\n          const LogSubmissionPlugin = require('./ci-visibility/log-submission/log-submission-plugin');\n          const automaticLogPlugin = new LogSubmissionPlugin(this);\n          automaticLogPlugin.configure({\n            ...config,\n            enabled: true\n          });\n        } else {\n          log.warn('DD_AGENTLESS_LOG_SUBMISSION_ENABLED is set, ' + 'but DD_API_KEY is undefined, so no automatic log submission will be performed.');\n        }\n      }\n    } catch (e) {\n      log.error(e);\n    }\n    return this;\n  }\n  _startProfiler(config) {\n    // do not stop tracer initialization if the profiler fails to be imported\n    try {\n      return require('./profiler').start(config);\n    } catch (e) {\n      log.error(e);\n    }\n  }\n  _enableOrDisableTracing(config) {\n    if (config.tracing !== false) {\n      if (config.appsec.enabled) {\n        this._modules.appsec.enable(config);\n      }\n      if (config.llmobs.enabled) {\n        this._modules.llmobs.enable(config);\n      }\n      if (!this._tracingInitialized) {\n        const prioritySampler = appsecStandalone.configure(config);\n        this._tracer = new DatadogTracer(config, prioritySampler);\n        this.dataStreamsCheckpointer = this._tracer.dataStreamsCheckpointer;\n        this.appsec = new AppsecSdk(this._tracer, config);\n        this.llmobs = new LLMObsSDK(this._tracer, this._modules.llmobs, config);\n        this._tracingInitialized = true;\n      }\n      if (config.iast.enabled) {\n        this._modules.iast.enable(config, this._tracer);\n      }\n    } else if (this._tracingInitialized) {\n      this._modules.appsec.disable();\n      this._modules.iast.disable();\n      this._modules.llmobs.disable();\n    }\n    if (this._tracingInitialized) {\n      this._tracer.configure(config);\n      this._pluginManager.configure(config);\n      DynamicInstrumentation.configure(config);\n      setStartupLogPluginManager(this._pluginManager);\n    }\n  }\n  profilerStarted() {\n    if (!this._profilerStarted) {\n      // injection hardening: this is only ever invoked from tests.\n      throw new Error('profilerStarted() must be called after init()');\n    }\n    return this._profilerStarted;\n  }\n  use() {\n    this._pluginManager.configurePlugin(...arguments);\n    return this;\n  }\n  get TracerProvider() {\n    return require('./opentelemetry/tracer_provider');\n  }\n}\nmodule.exports = Tracer;","map":{"version":3,"names":["NoopProxy","require","DatadogTracer","Config","runtimeMetrics","log","setStartupLogPluginManager","DynamicInstrumentation","telemetry","nomenclature","PluginManager","remoteConfig","AppsecSdk","dogstatsd","NoopDogStatsDClient","spanleak","SSIHeuristics","appsecStandalone","LLMObsSDK","LazyModule","constructor","provider","enable","module","arguments","disable","Tracer","_initialized","_nomenclature","_pluginManager","_tracingInitialized","_flare","_modules","appsec","iast","llmobs","init","options","config","crashtracking","enabled","start","CustomMetrics","setInterval","flush","unref","process","once","spanLeakDebug","MODES","LOG","enableLogging","GC_AND_LOG","enableGarbageCollection","startScrubber","isCiVisibility","rc","setProductHandler","action","conf","configure","lib_config","_enableOrDisableTracing","name","startsWith","log_level","prepare","task_type","args","send","dynamicInstrumentationEnabled","isGCPFunction","isAzureFunction","maybeStartServerlessMiniAgent","profiling","ssiHeuristics","mockProfiler","_profilerStarted","_startProfiler","emitsTelemetry","heuristicsActive","onTriggered","stop","Promise","resolve","tracing","isManualApiEnabled","TestApiManualPlugin","_testApiManualPlugin","ciVisAgentlessLogSubmissionEnabled","env","DD_API_KEY","LogSubmissionPlugin","automaticLogPlugin","warn","e","error","prioritySampler","_tracer","dataStreamsCheckpointer","profilerStarted","Error","use","configurePlugin","TracerProvider","exports"],"sources":["/Users/ibraheem.aboulnaga/rum-traces-example-app/node_modules/dd-trace/packages/dd-trace/src/proxy.js"],"sourcesContent":["'use strict'\nconst NoopProxy = require('./noop/proxy')\nconst DatadogTracer = require('./tracer')\nconst Config = require('./config')\nconst runtimeMetrics = require('./runtime_metrics')\nconst log = require('./log')\nconst { setStartupLogPluginManager } = require('./startup-log')\nconst DynamicInstrumentation = require('./debugger')\nconst telemetry = require('./telemetry')\nconst nomenclature = require('./service-naming')\nconst PluginManager = require('./plugin_manager')\nconst remoteConfig = require('./appsec/remote_config')\nconst AppsecSdk = require('./appsec/sdk')\nconst dogstatsd = require('./dogstatsd')\nconst NoopDogStatsDClient = require('./noop/dogstatsd')\nconst spanleak = require('./spanleak')\nconst { SSIHeuristics } = require('./profiling/ssi-heuristics')\nconst appsecStandalone = require('./appsec/standalone')\nconst LLMObsSDK = require('./llmobs/sdk')\n\nclass LazyModule {\n  constructor (provider) {\n    this.provider = provider\n  }\n\n  enable (...args) {\n    this.module = this.provider()\n    this.module.enable(...args)\n  }\n\n  disable () {\n    this.module?.disable()\n  }\n}\n\nclass Tracer extends NoopProxy {\n  constructor () {\n    super()\n\n    this._initialized = false\n    this._nomenclature = nomenclature\n    this._pluginManager = new PluginManager(this)\n    this.dogstatsd = new NoopDogStatsDClient()\n    this._tracingInitialized = false\n    this._flare = new LazyModule(() => require('./flare'))\n\n    // these requires must work with esm bundler\n    this._modules = {\n      appsec: new LazyModule(() => require('./appsec')),\n      iast: new LazyModule(() => require('./appsec/iast')),\n      llmobs: new LazyModule(() => require('./llmobs'))\n    }\n  }\n\n  init (options) {\n    if (this._initialized) return this\n\n    this._initialized = true\n\n    try {\n      const config = new Config(options) // TODO: support dynamic code config\n\n      if (config.crashtracking.enabled) {\n        require('./crashtracking').start(config)\n      }\n\n      telemetry.start(config, this._pluginManager)\n\n      if (config.dogstatsd) {\n        // Custom Metrics\n        this.dogstatsd = new dogstatsd.CustomMetrics(config)\n\n        setInterval(() => {\n          this.dogstatsd.flush()\n        }, 10 * 1000).unref()\n\n        process.once('beforeExit', () => {\n          this.dogstatsd.flush()\n        })\n      }\n\n      if (config.spanLeakDebug > 0) {\n        if (config.spanLeakDebug === spanleak.MODES.LOG) {\n          spanleak.enableLogging()\n        } else if (config.spanLeakDebug === spanleak.MODES.GC_AND_LOG) {\n          spanleak.enableGarbageCollection()\n        }\n        spanleak.startScrubber()\n      }\n\n      if (config.remoteConfig.enabled && !config.isCiVisibility) {\n        const rc = remoteConfig.enable(config, this._modules.appsec)\n\n        rc.setProductHandler('APM_TRACING', (action, conf) => {\n          if (action === 'unapply') {\n            config.configure({}, true)\n          } else {\n            config.configure(conf.lib_config, true)\n          }\n          this._enableOrDisableTracing(config)\n        })\n\n        rc.setProductHandler('AGENT_CONFIG', (action, conf) => {\n          if (!conf?.name?.startsWith('flare-log-level.')) return\n\n          if (action === 'unapply') {\n            this._flare.disable()\n          } else if (conf.config?.log_level) {\n            this._flare.enable(config)\n            this._flare.module.prepare(conf.config.log_level)\n          }\n        })\n\n        rc.setProductHandler('AGENT_TASK', (action, conf) => {\n          if (action === 'unapply' || !conf) return\n          if (conf.task_type !== 'tracer_flare' || !conf.args) return\n\n          this._flare.enable(config)\n          this._flare.module.send(conf.args)\n        })\n\n        if (config.dynamicInstrumentationEnabled) {\n          DynamicInstrumentation.start(config, rc)\n        }\n      }\n\n      if (config.isGCPFunction || config.isAzureFunction) {\n        require('./serverless').maybeStartServerlessMiniAgent(config)\n      }\n\n      if (config.profiling.enabled !== 'false') {\n        const ssiHeuristics = new SSIHeuristics(config)\n        ssiHeuristics.start()\n        let mockProfiler = null\n        if (config.profiling.enabled === 'true') {\n          this._profilerStarted = this._startProfiler(config)\n        } else if (ssiHeuristics.emitsTelemetry) {\n          // Start a mock profiler that emits mock profile-submitted events for the telemetry.\n          // It will be stopped if the real profiler is started by the heuristics.\n          mockProfiler = require('./profiling/ssi-telemetry-mock-profiler')\n          mockProfiler.start(config)\n        }\n\n        if (ssiHeuristics.heuristicsActive) {\n          ssiHeuristics.onTriggered(() => {\n            if (mockProfiler) {\n              mockProfiler.stop()\n            }\n            this._startProfiler(config)\n            ssiHeuristics.onTriggered() // deregister this callback\n          })\n        }\n\n        if (!this._profilerStarted) {\n          this._profilerStarted = Promise.resolve(false)\n        }\n      }\n\n      if (config.runtimeMetrics) {\n        runtimeMetrics.start(config)\n      }\n\n      this._enableOrDisableTracing(config)\n\n      if (config.tracing) {\n        if (config.isManualApiEnabled) {\n          const TestApiManualPlugin = require('./ci-visibility/test-api-manual/test-api-manual-plugin')\n          this._testApiManualPlugin = new TestApiManualPlugin(this)\n          this._testApiManualPlugin.configure({ ...config, enabled: true })\n        }\n      }\n      if (config.ciVisAgentlessLogSubmissionEnabled) {\n        if (process.env.DD_API_KEY) {\n          const LogSubmissionPlugin = require('./ci-visibility/log-submission/log-submission-plugin')\n          const automaticLogPlugin = new LogSubmissionPlugin(this)\n          automaticLogPlugin.configure({ ...config, enabled: true })\n        } else {\n          log.warn(\n            'DD_AGENTLESS_LOG_SUBMISSION_ENABLED is set, ' +\n            'but DD_API_KEY is undefined, so no automatic log submission will be performed.'\n          )\n        }\n      }\n    } catch (e) {\n      log.error(e)\n    }\n\n    return this\n  }\n\n  _startProfiler (config) {\n    // do not stop tracer initialization if the profiler fails to be imported\n    try {\n      return require('./profiler').start(config)\n    } catch (e) {\n      log.error(e)\n    }\n  }\n\n  _enableOrDisableTracing (config) {\n    if (config.tracing !== false) {\n      if (config.appsec.enabled) {\n        this._modules.appsec.enable(config)\n      }\n      if (config.llmobs.enabled) {\n        this._modules.llmobs.enable(config)\n      }\n      if (!this._tracingInitialized) {\n        const prioritySampler = appsecStandalone.configure(config)\n        this._tracer = new DatadogTracer(config, prioritySampler)\n        this.dataStreamsCheckpointer = this._tracer.dataStreamsCheckpointer\n        this.appsec = new AppsecSdk(this._tracer, config)\n        this.llmobs = new LLMObsSDK(this._tracer, this._modules.llmobs, config)\n        this._tracingInitialized = true\n      }\n      if (config.iast.enabled) {\n        this._modules.iast.enable(config, this._tracer)\n      }\n    } else if (this._tracingInitialized) {\n      this._modules.appsec.disable()\n      this._modules.iast.disable()\n      this._modules.llmobs.disable()\n    }\n\n    if (this._tracingInitialized) {\n      this._tracer.configure(config)\n      this._pluginManager.configure(config)\n      DynamicInstrumentation.configure(config)\n      setStartupLogPluginManager(this._pluginManager)\n    }\n  }\n\n  profilerStarted () {\n    if (!this._profilerStarted) {\n      // injection hardening: this is only ever invoked from tests.\n      throw new Error('profilerStarted() must be called after init()')\n    }\n    return this._profilerStarted\n  }\n\n  use () {\n    this._pluginManager.configurePlugin(...arguments)\n    return this\n  }\n\n  get TracerProvider () {\n    return require('./opentelemetry/tracer_provider')\n  }\n}\n\nmodule.exports = Tracer\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,cAAc,CAAC;AACzC,MAAMC,aAAa,GAAGD,OAAO,CAAC,UAAU,CAAC;AACzC,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMG,cAAc,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMI,GAAG,GAAGJ,OAAO,CAAC,OAAO,CAAC;AAC5B,MAAM;EAAEK;AAA2B,CAAC,GAAGL,OAAO,CAAC,eAAe,CAAC;AAC/D,MAAMM,sBAAsB,GAAGN,OAAO,CAAC,YAAY,CAAC;AACpD,MAAMO,SAAS,GAAGP,OAAO,CAAC,aAAa,CAAC;AACxC,MAAMQ,YAAY,GAAGR,OAAO,CAAC,kBAAkB,CAAC;AAChD,MAAMS,aAAa,GAAGT,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAMU,YAAY,GAAGV,OAAO,CAAC,wBAAwB,CAAC;AACtD,MAAMW,SAAS,GAAGX,OAAO,CAAC,cAAc,CAAC;AACzC,MAAMY,SAAS,GAAGZ,OAAO,CAAC,aAAa,CAAC;AACxC,MAAMa,mBAAmB,GAAGb,OAAO,CAAC,kBAAkB,CAAC;AACvD,MAAMc,QAAQ,GAAGd,OAAO,CAAC,YAAY,CAAC;AACtC,MAAM;EAAEe;AAAc,CAAC,GAAGf,OAAO,CAAC,4BAA4B,CAAC;AAC/D,MAAMgB,gBAAgB,GAAGhB,OAAO,CAAC,qBAAqB,CAAC;AACvD,MAAMiB,SAAS,GAAGjB,OAAO,CAAC,cAAc,CAAC;AAEzC,MAAMkB,UAAU,CAAC;EACfC,WAAWA,CAAEC,QAAQ,EAAE;IACrB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;EAEAC,MAAMA,CAAA,EAAW;IACf,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,QAAQ,CAAC,CAAC;IAC7B,IAAI,CAACE,MAAM,CAACD,MAAM,CAAC,GAAAE,SAAO,CAAC;EAC7B;EAEAC,OAAOA,CAAA,EAAI;IACT,IAAI,CAACF,MAAM,EAAEE,OAAO,CAAC,CAAC;EACxB;AACF;AAEA,MAAMC,MAAM,SAAS1B,SAAS,CAAC;EAC7BoB,WAAWA,CAAA,EAAI;IACb,KAAK,CAAC,CAAC;IAEP,IAAI,CAACO,YAAY,GAAG,KAAK;IACzB,IAAI,CAACC,aAAa,GAAGnB,YAAY;IACjC,IAAI,CAACoB,cAAc,GAAG,IAAInB,aAAa,CAAC,IAAI,CAAC;IAC7C,IAAI,CAACG,SAAS,GAAG,IAAIC,mBAAmB,CAAC,CAAC;IAC1C,IAAI,CAACgB,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACC,MAAM,GAAG,IAAIZ,UAAU,CAAC,MAAMlB,OAAO,CAAC,SAAS,CAAC,CAAC;;IAEtD;IACA,IAAI,CAAC+B,QAAQ,GAAG;MACdC,MAAM,EAAE,IAAId,UAAU,CAAC,MAAMlB,OAAO,CAAC,UAAU,CAAC,CAAC;MACjDiC,IAAI,EAAE,IAAIf,UAAU,CAAC,MAAMlB,OAAO,CAAC,eAAe,CAAC,CAAC;MACpDkC,MAAM,EAAE,IAAIhB,UAAU,CAAC,MAAMlB,OAAO,CAAC,UAAU,CAAC;IAClD,CAAC;EACH;EAEAmC,IAAIA,CAAEC,OAAO,EAAE;IACb,IAAI,IAAI,CAACV,YAAY,EAAE,OAAO,IAAI;IAElC,IAAI,CAACA,YAAY,GAAG,IAAI;IAExB,IAAI;MACF,MAAMW,MAAM,GAAG,IAAInC,MAAM,CAACkC,OAAO,CAAC,EAAC;;MAEnC,IAAIC,MAAM,CAACC,aAAa,CAACC,OAAO,EAAE;QAChCvC,OAAO,CAAC,iBAAiB,CAAC,CAACwC,KAAK,CAACH,MAAM,CAAC;MAC1C;MAEA9B,SAAS,CAACiC,KAAK,CAACH,MAAM,EAAE,IAAI,CAACT,cAAc,CAAC;MAE5C,IAAIS,MAAM,CAACzB,SAAS,EAAE;QACpB;QACA,IAAI,CAACA,SAAS,GAAG,IAAIA,SAAS,CAAC6B,aAAa,CAACJ,MAAM,CAAC;QAEpDK,WAAW,CAAC,MAAM;UAChB,IAAI,CAAC9B,SAAS,CAAC+B,KAAK,CAAC,CAAC;QACxB,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC;QAErBC,OAAO,CAACC,IAAI,CAAC,YAAY,EAAE,MAAM;UAC/B,IAAI,CAAClC,SAAS,CAAC+B,KAAK,CAAC,CAAC;QACxB,CAAC,CAAC;MACJ;MAEA,IAAIN,MAAM,CAACU,aAAa,GAAG,CAAC,EAAE;QAC5B,IAAIV,MAAM,CAACU,aAAa,KAAKjC,QAAQ,CAACkC,KAAK,CAACC,GAAG,EAAE;UAC/CnC,QAAQ,CAACoC,aAAa,CAAC,CAAC;QAC1B,CAAC,MAAM,IAAIb,MAAM,CAACU,aAAa,KAAKjC,QAAQ,CAACkC,KAAK,CAACG,UAAU,EAAE;UAC7DrC,QAAQ,CAACsC,uBAAuB,CAAC,CAAC;QACpC;QACAtC,QAAQ,CAACuC,aAAa,CAAC,CAAC;MAC1B;MAEA,IAAIhB,MAAM,CAAC3B,YAAY,CAAC6B,OAAO,IAAI,CAACF,MAAM,CAACiB,cAAc,EAAE;QACzD,MAAMC,EAAE,GAAG7C,YAAY,CAACW,MAAM,CAACgB,MAAM,EAAE,IAAI,CAACN,QAAQ,CAACC,MAAM,CAAC;QAE5DuB,EAAE,CAACC,iBAAiB,CAAC,aAAa,EAAE,CAACC,MAAM,EAAEC,IAAI,KAAK;UACpD,IAAID,MAAM,KAAK,SAAS,EAAE;YACxBpB,MAAM,CAACsB,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;UAC5B,CAAC,MAAM;YACLtB,MAAM,CAACsB,SAAS,CAACD,IAAI,CAACE,UAAU,EAAE,IAAI,CAAC;UACzC;UACA,IAAI,CAACC,uBAAuB,CAACxB,MAAM,CAAC;QACtC,CAAC,CAAC;QAEFkB,EAAE,CAACC,iBAAiB,CAAC,cAAc,EAAE,CAACC,MAAM,EAAEC,IAAI,KAAK;UACrD,IAAI,CAACA,IAAI,EAAEI,IAAI,EAAEC,UAAU,CAAC,kBAAkB,CAAC,EAAE;UAEjD,IAAIN,MAAM,KAAK,SAAS,EAAE;YACxB,IAAI,CAAC3B,MAAM,CAACN,OAAO,CAAC,CAAC;UACvB,CAAC,MAAM,IAAIkC,IAAI,CAACrB,MAAM,EAAE2B,SAAS,EAAE;YACjC,IAAI,CAAClC,MAAM,CAACT,MAAM,CAACgB,MAAM,CAAC;YAC1B,IAAI,CAACP,MAAM,CAACR,MAAM,CAAC2C,OAAO,CAACP,IAAI,CAACrB,MAAM,CAAC2B,SAAS,CAAC;UACnD;QACF,CAAC,CAAC;QAEFT,EAAE,CAACC,iBAAiB,CAAC,YAAY,EAAE,CAACC,MAAM,EAAEC,IAAI,KAAK;UACnD,IAAID,MAAM,KAAK,SAAS,IAAI,CAACC,IAAI,EAAE;UACnC,IAAIA,IAAI,CAACQ,SAAS,KAAK,cAAc,IAAI,CAACR,IAAI,CAACS,IAAI,EAAE;UAErD,IAAI,CAACrC,MAAM,CAACT,MAAM,CAACgB,MAAM,CAAC;UAC1B,IAAI,CAACP,MAAM,CAACR,MAAM,CAAC8C,IAAI,CAACV,IAAI,CAACS,IAAI,CAAC;QACpC,CAAC,CAAC;QAEF,IAAI9B,MAAM,CAACgC,6BAA6B,EAAE;UACxC/D,sBAAsB,CAACkC,KAAK,CAACH,MAAM,EAAEkB,EAAE,CAAC;QAC1C;MACF;MAEA,IAAIlB,MAAM,CAACiC,aAAa,IAAIjC,MAAM,CAACkC,eAAe,EAAE;QAClDvE,OAAO,CAAC,cAAc,CAAC,CAACwE,6BAA6B,CAACnC,MAAM,CAAC;MAC/D;MAEA,IAAIA,MAAM,CAACoC,SAAS,CAAClC,OAAO,KAAK,OAAO,EAAE;QACxC,MAAMmC,aAAa,GAAG,IAAI3D,aAAa,CAACsB,MAAM,CAAC;QAC/CqC,aAAa,CAAClC,KAAK,CAAC,CAAC;QACrB,IAAImC,YAAY,GAAG,IAAI;QACvB,IAAItC,MAAM,CAACoC,SAAS,CAAClC,OAAO,KAAK,MAAM,EAAE;UACvC,IAAI,CAACqC,gBAAgB,GAAG,IAAI,CAACC,cAAc,CAACxC,MAAM,CAAC;QACrD,CAAC,MAAM,IAAIqC,aAAa,CAACI,cAAc,EAAE;UACvC;UACA;UACAH,YAAY,GAAG3E,OAAO,CAAC,yCAAyC,CAAC;UACjE2E,YAAY,CAACnC,KAAK,CAACH,MAAM,CAAC;QAC5B;QAEA,IAAIqC,aAAa,CAACK,gBAAgB,EAAE;UAClCL,aAAa,CAACM,WAAW,CAAC,MAAM;YAC9B,IAAIL,YAAY,EAAE;cAChBA,YAAY,CAACM,IAAI,CAAC,CAAC;YACrB;YACA,IAAI,CAACJ,cAAc,CAACxC,MAAM,CAAC;YAC3BqC,aAAa,CAACM,WAAW,CAAC,CAAC,EAAC;UAC9B,CAAC,CAAC;QACJ;QAEA,IAAI,CAAC,IAAI,CAACJ,gBAAgB,EAAE;UAC1B,IAAI,CAACA,gBAAgB,GAAGM,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;QAChD;MACF;MAEA,IAAI9C,MAAM,CAAClC,cAAc,EAAE;QACzBA,cAAc,CAACqC,KAAK,CAACH,MAAM,CAAC;MAC9B;MAEA,IAAI,CAACwB,uBAAuB,CAACxB,MAAM,CAAC;MAEpC,IAAIA,MAAM,CAAC+C,OAAO,EAAE;QAClB,IAAI/C,MAAM,CAACgD,kBAAkB,EAAE;UAC7B,MAAMC,mBAAmB,GAAGtF,OAAO,CAAC,wDAAwD,CAAC;UAC7F,IAAI,CAACuF,oBAAoB,GAAG,IAAID,mBAAmB,CAAC,IAAI,CAAC;UACzD,IAAI,CAACC,oBAAoB,CAAC5B,SAAS,CAAC;YAAE,GAAGtB,MAAM;YAAEE,OAAO,EAAE;UAAK,CAAC,CAAC;QACnE;MACF;MACA,IAAIF,MAAM,CAACmD,kCAAkC,EAAE;QAC7C,IAAI3C,OAAO,CAAC4C,GAAG,CAACC,UAAU,EAAE;UAC1B,MAAMC,mBAAmB,GAAG3F,OAAO,CAAC,sDAAsD,CAAC;UAC3F,MAAM4F,kBAAkB,GAAG,IAAID,mBAAmB,CAAC,IAAI,CAAC;UACxDC,kBAAkB,CAACjC,SAAS,CAAC;YAAE,GAAGtB,MAAM;YAAEE,OAAO,EAAE;UAAK,CAAC,CAAC;QAC5D,CAAC,MAAM;UACLnC,GAAG,CAACyF,IAAI,CACN,8CAA8C,GAC9C,gFACF,CAAC;QACH;MACF;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV1F,GAAG,CAAC2F,KAAK,CAACD,CAAC,CAAC;IACd;IAEA,OAAO,IAAI;EACb;EAEAjB,cAAcA,CAAExC,MAAM,EAAE;IACtB;IACA,IAAI;MACF,OAAOrC,OAAO,CAAC,YAAY,CAAC,CAACwC,KAAK,CAACH,MAAM,CAAC;IAC5C,CAAC,CAAC,OAAOyD,CAAC,EAAE;MACV1F,GAAG,CAAC2F,KAAK,CAACD,CAAC,CAAC;IACd;EACF;EAEAjC,uBAAuBA,CAAExB,MAAM,EAAE;IAC/B,IAAIA,MAAM,CAAC+C,OAAO,KAAK,KAAK,EAAE;MAC5B,IAAI/C,MAAM,CAACL,MAAM,CAACO,OAAO,EAAE;QACzB,IAAI,CAACR,QAAQ,CAACC,MAAM,CAACX,MAAM,CAACgB,MAAM,CAAC;MACrC;MACA,IAAIA,MAAM,CAACH,MAAM,CAACK,OAAO,EAAE;QACzB,IAAI,CAACR,QAAQ,CAACG,MAAM,CAACb,MAAM,CAACgB,MAAM,CAAC;MACrC;MACA,IAAI,CAAC,IAAI,CAACR,mBAAmB,EAAE;QAC7B,MAAMmE,eAAe,GAAGhF,gBAAgB,CAAC2C,SAAS,CAACtB,MAAM,CAAC;QAC1D,IAAI,CAAC4D,OAAO,GAAG,IAAIhG,aAAa,CAACoC,MAAM,EAAE2D,eAAe,CAAC;QACzD,IAAI,CAACE,uBAAuB,GAAG,IAAI,CAACD,OAAO,CAACC,uBAAuB;QACnE,IAAI,CAAClE,MAAM,GAAG,IAAIrB,SAAS,CAAC,IAAI,CAACsF,OAAO,EAAE5D,MAAM,CAAC;QACjD,IAAI,CAACH,MAAM,GAAG,IAAIjB,SAAS,CAAC,IAAI,CAACgF,OAAO,EAAE,IAAI,CAAClE,QAAQ,CAACG,MAAM,EAAEG,MAAM,CAAC;QACvE,IAAI,CAACR,mBAAmB,GAAG,IAAI;MACjC;MACA,IAAIQ,MAAM,CAACJ,IAAI,CAACM,OAAO,EAAE;QACvB,IAAI,CAACR,QAAQ,CAACE,IAAI,CAACZ,MAAM,CAACgB,MAAM,EAAE,IAAI,CAAC4D,OAAO,CAAC;MACjD;IACF,CAAC,MAAM,IAAI,IAAI,CAACpE,mBAAmB,EAAE;MACnC,IAAI,CAACE,QAAQ,CAACC,MAAM,CAACR,OAAO,CAAC,CAAC;MAC9B,IAAI,CAACO,QAAQ,CAACE,IAAI,CAACT,OAAO,CAAC,CAAC;MAC5B,IAAI,CAACO,QAAQ,CAACG,MAAM,CAACV,OAAO,CAAC,CAAC;IAChC;IAEA,IAAI,IAAI,CAACK,mBAAmB,EAAE;MAC5B,IAAI,CAACoE,OAAO,CAACtC,SAAS,CAACtB,MAAM,CAAC;MAC9B,IAAI,CAACT,cAAc,CAAC+B,SAAS,CAACtB,MAAM,CAAC;MACrC/B,sBAAsB,CAACqD,SAAS,CAACtB,MAAM,CAAC;MACxChC,0BAA0B,CAAC,IAAI,CAACuB,cAAc,CAAC;IACjD;EACF;EAEAuE,eAAeA,CAAA,EAAI;IACjB,IAAI,CAAC,IAAI,CAACvB,gBAAgB,EAAE;MAC1B;MACA,MAAM,IAAIwB,KAAK,CAAC,+CAA+C,CAAC;IAClE;IACA,OAAO,IAAI,CAACxB,gBAAgB;EAC9B;EAEAyB,GAAGA,CAAA,EAAI;IACL,IAAI,CAACzE,cAAc,CAAC0E,eAAe,CAAC,GAAG/E,SAAS,CAAC;IACjD,OAAO,IAAI;EACb;EAEA,IAAIgF,cAAcA,CAAA,EAAI;IACpB,OAAOvG,OAAO,CAAC,iCAAiC,CAAC;EACnD;AACF;AAEAsB,MAAM,CAACkF,OAAO,GAAG/E,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script"}