{"ast":null,"code":"import { report } from './report';\nvar UNKNOWN_FUNCTION = '?';\n/**\n * computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n * ```js\n * s = computeStackTraceOfCaller([depth])\n * s = computeStackTrace(exception) // consider using report instead (see below)\n * ```\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with report,\n * which builds on top of computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * Tracing example:\n * ```js\n *     function trace(message) {\n *         let stackInfo = computeStackTrace.ofCaller();\n *         let data = message + \"\\n\";\n *         for(let i in stackInfo.stack) {\n *             let item = stackInfo.stack[i];\n *             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\n *         }\n *         if (window.console)\n *             console.info(data);\n *         else\n *             alert(data);\n *     }\n * ```\n * @memberof TraceKit\n * @namespace\n */\n/**\n * Computes a stack trace for an exception.\n * @param {Error} ex\n * @param {(string|number)=} depth\n * @memberof computeStackTrace\n */\nexport function computeStackTrace(ex, depth) {\n  var stack;\n  var normalizedDepth = depth === undefined ? 0 : +depth;\n  try {\n    // This must be tried first because Opera 10 *destroys*\n    // its stacktrace property if you try to access the stack\n    // property first!!\n    stack = computeStackTraceFromStacktraceProp(ex);\n    if (stack) {\n      return stack;\n    }\n  } catch (e) {\n    if (debug) {\n      throw e;\n    }\n  }\n  try {\n    stack = computeStackTraceFromStackProp(ex);\n    if (stack) {\n      return stack;\n    }\n  } catch (e) {\n    if (debug) {\n      throw e;\n    }\n  }\n  try {\n    stack = computeStackTraceFromOperaMultiLineMessage(ex);\n    if (stack) {\n      return stack;\n    }\n  } catch (e) {\n    if (debug) {\n      throw e;\n    }\n  }\n  try {\n    stack = computeStackTraceByWalkingCallerChain(ex, normalizedDepth + 1);\n    if (stack) {\n      return stack;\n    }\n  } catch (e) {\n    if (debug) {\n      throw e;\n    }\n  }\n  return {\n    message: tryToGetString(ex, 'message'),\n    name: tryToGetString(ex, 'name'),\n    stack: []\n  };\n}\nvar debug = false;\n// Contents of Exception in various browsers.\n//\n// SAFARI:\n// ex.message = Can't find variable: qq\n// ex.line = 59\n// ex.sourceId = 580238192\n// ex.sourceURL = http://...\n// ex.expressionBeginOffset = 96\n// ex.expressionCaretOffset = 98\n// ex.expressionEndOffset = 98\n// ex.name = ReferenceError\n//\n// FIREFOX:\n// ex.message = qq is not defined\n// ex.fileName = http://...\n// ex.lineNumber = 59\n// ex.columnNumber = 69\n// ex.stack = ...stack trace... (see the example below)\n// ex.name = ReferenceError\n//\n// CHROME:\n// ex.message = qq is not defined\n// ex.name = ReferenceError\n// ex.type = not_defined\n// ex.arguments = ['aa']\n// ex.stack = ...stack trace...\n//\n// INTERNET EXPLORER:\n// ex.message = ...\n// ex.name = ReferenceError\n//\n// OPERA:\n// ex.message = ...message... (see the example below)\n// ex.name = ReferenceError\n// ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n// ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n/**\n * Computes stack trace information from the stack property.\n * Chrome and Gecko use this property.\n * @param {Error} ex\n * @return {?StackTrace} Stack trace information.\n * @memberof computeStackTrace\n */\nexport function computeStackTraceFromStackProp(ex) {\n  var stacktrace = tryToGetString(ex, 'stack');\n  if (!stacktrace) {\n    return;\n  }\n  // eslint-disable-next-line  max-len\n  var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n  // eslint-disable-next-line  max-len\n  var gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|capacitor|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\n  // eslint-disable-next-line  max-len\n  var winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n  // Used to additionally parse URL/line/column from eval frames\n  var isEval;\n  var geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n  var chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n  var lines = stacktrace.split('\\n');\n  var stack = [];\n  var submatch;\n  var parts;\n  var element;\n  for (var i = 0, j = lines.length; i < j; i += 1) {\n    if (chrome.exec(lines[i])) {\n      parts = chrome.exec(lines[i]);\n      var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n      isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n      submatch = chromeEval.exec(parts[2]);\n      if (isEval && submatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n      }\n      element = {\n        args: isNative ? [parts[2]] : [],\n        column: parts[4] ? +parts[4] : undefined,\n        func: parts[1] || UNKNOWN_FUNCTION,\n        line: parts[3] ? +parts[3] : undefined,\n        url: !isNative ? parts[2] : undefined\n      };\n    } else if (winjs.exec(lines[i])) {\n      parts = winjs.exec(lines[i]);\n      element = {\n        args: [],\n        column: parts[4] ? +parts[4] : undefined,\n        func: parts[1] || UNKNOWN_FUNCTION,\n        line: +parts[3],\n        url: parts[2]\n      };\n    } else if (gecko.exec(lines[i])) {\n      parts = gecko.exec(lines[i]);\n      isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n      submatch = geckoEval.exec(parts[3]);\n      if (isEval && submatch) {\n        // throw out eval line/column and use top-most line number\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = undefined; // no column when eval\n      } else if (i === 0 && !parts[5] && !isUndefined(ex.columnNumber)) {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = ex.columnNumber + 1;\n      }\n      element = {\n        args: parts[2] ? parts[2].split(',') : [],\n        column: parts[5] ? +parts[5] : undefined,\n        func: parts[1] || UNKNOWN_FUNCTION,\n        line: parts[4] ? +parts[4] : undefined,\n        url: parts[3]\n      };\n    } else {\n      continue;\n    }\n    if (!element.func && element.line) {\n      element.func = UNKNOWN_FUNCTION;\n    }\n    stack.push(element);\n  }\n  if (!stack.length) {\n    return;\n  }\n  return {\n    stack: stack,\n    message: tryToGetString(ex, 'message'),\n    name: tryToGetString(ex, 'name')\n  };\n}\n/**\n * Computes stack trace information from the stacktrace property.\n * Opera 10+ uses this property.\n * @param {Error} ex\n * @return {?StackTrace} Stack trace information.\n * @memberof computeStackTrace\n */\nfunction computeStackTraceFromStacktraceProp(ex) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  var stacktrace = tryToGetString(ex, 'stacktrace');\n  if (!stacktrace) {\n    return;\n  }\n  var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n  // eslint-disable-next-line  max-len\n  var opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i;\n  var lines = stacktrace.split('\\n');\n  var stack = [];\n  var parts;\n  for (var line = 0; line < lines.length; line += 2) {\n    var element = void 0;\n    if (opera10Regex.exec(lines[line])) {\n      parts = opera10Regex.exec(lines[line]);\n      element = {\n        args: [],\n        column: undefined,\n        func: parts[3],\n        line: +parts[1],\n        url: parts[2]\n      };\n    } else if (opera11Regex.exec(lines[line])) {\n      parts = opera11Regex.exec(lines[line]);\n      element = {\n        args: parts[5] ? parts[5].split(',') : [],\n        column: +parts[2],\n        func: parts[3] || parts[4],\n        line: +parts[1],\n        url: parts[6]\n      };\n    }\n    if (element) {\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n      element.context = [lines[line + 1]];\n      stack.push(element);\n    }\n  }\n  if (!stack.length) {\n    return;\n  }\n  return {\n    stack: stack,\n    message: tryToGetString(ex, 'message'),\n    name: tryToGetString(ex, 'name')\n  };\n}\n/**\n * NOT TESTED.\n * Computes stack trace information from an error message that includes\n * the stack trace.\n * Opera 9 and earlier use this method if the option to show stack\n * traces is turned on in opera:config.\n * @param {Error} ex\n * @return {?StackTrace} Stack information.\n * @memberof computeStackTrace\n */\nfunction computeStackTraceFromOperaMultiLineMessage(ex) {\n  // TODO: Clean this function up\n  // Opera includes a stack trace into the exception message. An example is:\n  //\n  // Statement on line 3: Undefined variable: undefinedFunc\n  // Backtrace:\n  //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js:\n  //   In function zzz\n  //         undefinedFunc(a);\n  //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html:\n  //   In function yyy\n  //           zzz(x, y, z);\n  //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html:\n  //   In function xxx\n  //           yyy(a, a, a);\n  //   Line 1 of function script\n  //     try { xxx('hi'); return false; } catch(ex) { report(ex); }\n  //   ...\n  var message = tryToGetString(ex, 'message');\n  if (!message) {\n    return;\n  }\n  var lines = message.split('\\n');\n  if (lines.length < 4) {\n    return;\n  }\n  var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i;\n  var lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i;\n  var lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i;\n  var stack = [];\n  var scripts = window && window.document && window.document.getElementsByTagName('script');\n  var inlineScriptBlocks = [];\n  var parts;\n  for (var s in scripts) {\n    if (has(scripts, s) && !scripts[s].src) {\n      inlineScriptBlocks.push(scripts[s]);\n    }\n  }\n  for (var line = 2; line < lines.length; line += 2) {\n    var item = void 0;\n    if (lineRE1.exec(lines[line])) {\n      parts = lineRE1.exec(lines[line]);\n      item = {\n        args: [],\n        column: undefined,\n        func: parts[3],\n        line: +parts[1],\n        url: parts[2]\n      };\n    } else if (lineRE2.exec(lines[line])) {\n      parts = lineRE2.exec(lines[line]);\n      item = {\n        args: [],\n        column: undefined,\n        func: parts[4],\n        line: +parts[1],\n        url: parts[3]\n      };\n    } else if (lineRE3.exec(lines[line])) {\n      parts = lineRE3.exec(lines[line]);\n      var url = window.location.href.replace(/#.*$/, '');\n      item = {\n        url: url,\n        args: [],\n        column: undefined,\n        func: '',\n        line: +parts[1]\n      };\n    }\n    if (item) {\n      if (!item.func) {\n        item.func = UNKNOWN_FUNCTION;\n      }\n      item.context = [lines[line + 1]];\n      stack.push(item);\n    }\n  }\n  if (!stack.length) {\n    return; // could not parse multiline exception message as Opera stack trace\n  }\n  return {\n    stack: stack,\n    message: lines[0],\n    name: tryToGetString(ex, 'name')\n  };\n}\n/**\n * Adds information about the first frame to incomplete stack traces.\n * Safari and IE require this to get complete data on the first frame.\n * @param {StackTrace} stackInfo Stack trace information from\n * one of the compute* methods.\n * @param {string=} url The URL of the script that caused an error.\n * @param {(number|string)=} lineNo The line number of the script that\n * caused an error.\n * @param {string=} message The error generated by the browser, which\n * hopefully contains the name of the object that caused the error.\n * @return {boolean} Whether or not the stack information was\n * augmented.\n * @memberof computeStackTrace\n */\nexport function augmentStackTraceWithInitialElement(stackInfo, url, lineNo) {\n  var initial = {\n    url: url,\n    line: lineNo ? +lineNo : undefined\n  };\n  if (initial.url && initial.line) {\n    stackInfo.incomplete = false;\n    var stack = stackInfo.stack;\n    if (stack.length > 0) {\n      if (stack[0].url === initial.url) {\n        if (stack[0].line === initial.line) {\n          return false; // already in stack trace\n        }\n        if (!stack[0].line && stack[0].func === initial.func) {\n          stack[0].line = initial.line;\n          stack[0].context = initial.context;\n          return false;\n        }\n      }\n    }\n    stack.unshift(initial);\n    stackInfo.partial = true;\n    return true;\n  }\n  stackInfo.incomplete = true;\n  return false;\n}\n/**\n * Computes stack trace information by walking the arguments.caller\n * chain at the time the exception occurred. This will cause earlier\n * frames to be missed but is the only way to get any stack trace in\n * Safari and IE. The top frame is restored by\n * {@link augmentStackTraceWithInitialElement}.\n * @param {Error} ex\n * @param {number} depth\n * @return {StackTrace} Stack trace information.\n * @memberof computeStackTrace\n */\nfunction computeStackTraceByWalkingCallerChain(ex, depth) {\n  var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i;\n  var stack = [];\n  var funcs = {};\n  var recursion = false;\n  var parts;\n  var item;\n  for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n    if (curr === computeStackTrace || curr === report) {\n      continue;\n    }\n    item = {\n      args: [],\n      column: undefined,\n      func: UNKNOWN_FUNCTION,\n      line: undefined,\n      url: undefined\n    };\n    parts = functionName.exec(curr.toString());\n    if (curr.name) {\n      item.func = curr.name;\n    } else if (parts) {\n      item.func = parts[1];\n    }\n    if (typeof item.func === 'undefined') {\n      item.func = parts ? parts.input.substring(0, parts.input.indexOf('{')) : undefined;\n    }\n    if (funcs[curr.toString()]) {\n      recursion = true;\n    } else {\n      funcs[curr.toString()] = true;\n    }\n    stack.push(item);\n  }\n  if (depth) {\n    stack.splice(0, depth);\n  }\n  var result = {\n    stack: stack,\n    message: tryToGetString(ex, 'message'),\n    name: tryToGetString(ex, 'name')\n  };\n  augmentStackTraceWithInitialElement(result, tryToGetString(ex, 'sourceURL') || tryToGetString(ex, 'fileName'), tryToGetString(ex, 'line') || tryToGetString(ex, 'lineNumber'));\n  return result;\n}\nfunction tryToGetString(candidate, property) {\n  if (typeof candidate !== 'object' || !candidate || !(property in candidate)) {\n    return undefined;\n  }\n  var value = candidate[property];\n  return typeof value === 'string' ? value : undefined;\n}\n/**\n * Logs a stacktrace starting from the previous call and working down.\n * @param {(number|string)=} depth How many frames deep to trace.\n * @return {StackTrace} Stack trace information.\n * @memberof computeStackTrace\n */\nexport function computeStackTraceOfCaller(depth) {\n  var currentDepth = (depth === undefined ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\n  try {\n    throw new Error();\n  } catch (ex) {\n    return computeStackTrace(ex, currentDepth + 1);\n  }\n}\n/**\n * A better form of hasOwnProperty<br/>\n * Example: `has(MainHostObject, property) === true/false`\n *\n * @param {Object} object to check property\n * @param {string} key to check\n * @return {Boolean} true if the object has the key and it is not inherited\n */\nfunction has(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n/**\n * Returns true if the parameter is undefined<br/>\n * Example: `isUndefined(val) === true/false`\n *\n * @param {*} what Value to check\n * @return {Boolean} true if undefined and false otherwise\n */\nfunction isUndefined(what) {\n  return typeof what === 'undefined';\n}","map":{"version":3,"names":["report","UNKNOWN_FUNCTION","computeStackTrace","ex","depth","stack","normalizedDepth","undefined","computeStackTraceFromStacktraceProp","e","debug","computeStackTraceFromStackProp","computeStackTraceFromOperaMultiLineMessage","computeStackTraceByWalkingCallerChain","message","tryToGetString","name","stacktrace","chrome","gecko","winjs","isEval","geckoEval","chromeEval","lines","split","submatch","parts","element","i","j","length","exec","isNative","indexOf","args","column","func","line","url","isUndefined","columnNumber","push","opera10Regex","opera11Regex","context","lineRE1","lineRE2","lineRE3","scripts","window","document","getElementsByTagName","inlineScriptBlocks","s","has","src","item","location","href","replace","augmentStackTraceWithInitialElement","stackInfo","lineNo","initial","incomplete","unshift","partial","functionName","funcs","recursion","curr","caller","toString","input","substring","splice","result","candidate","property","value","computeStackTraceOfCaller","currentDepth","Error","object","key","Object","prototype","hasOwnProperty","call","what"],"sources":["../../../src/domain/tracekit/computeStackTrace.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}