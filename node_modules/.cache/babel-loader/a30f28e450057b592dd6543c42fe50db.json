{"ast":null,"code":"import { noop, elapsed, round, timeStampNow } from '@datadog/browser-core';\nimport { supportPerformanceTimingEvent } from '../../../browser/performanceCollection';\nimport { ViewLoadingType } from '../../../rawRumEvent.types';\nimport { LifeCycleEventType } from '../../lifeCycle';\nimport { trackEventCounts } from '../../trackEventCounts';\nimport { waitIdlePageActivity } from '../../trackPageActivities';\nexport function trackViewMetrics(lifeCycle, domMutationObservable, scheduleViewUpdate, loadingType) {\n  var viewMetrics = {\n    eventCounts: {\n      errorCount: 0,\n      longTaskCount: 0,\n      resourceCount: 0,\n      userActionCount: 0\n    }\n  };\n  var stopEventCountsTracking = trackEventCounts(lifeCycle, function (newEventCounts) {\n    viewMetrics.eventCounts = newEventCounts;\n    scheduleViewUpdate();\n  }).stop;\n  var _a = trackLoadingTime(loadingType, function (newLoadingTime) {\n      viewMetrics.loadingTime = newLoadingTime;\n      scheduleViewUpdate();\n    }),\n    setActivityLoadingTime = _a.setActivityLoadingTime,\n    setLoadEvent = _a.setLoadEvent;\n  var stopActivityLoadingTimeTracking = trackActivityLoadingTime(lifeCycle, domMutationObservable, setActivityLoadingTime).stop;\n  var stopCLSTracking;\n  if (isLayoutShiftSupported()) {\n    viewMetrics.cumulativeLayoutShift = 0;\n    stopCLSTracking = trackLayoutShift(lifeCycle, function (layoutShift) {\n      viewMetrics.cumulativeLayoutShift = round(viewMetrics.cumulativeLayoutShift + layoutShift, 4);\n      scheduleViewUpdate();\n    }).stop;\n  } else {\n    stopCLSTracking = noop;\n  }\n  return {\n    stop: function () {\n      stopEventCountsTracking();\n      stopActivityLoadingTimeTracking();\n      stopCLSTracking();\n    },\n    setLoadEvent: setLoadEvent,\n    viewMetrics: viewMetrics\n  };\n}\nfunction trackLoadingTime(loadType, callback) {\n  var isWaitingForLoadEvent = loadType === ViewLoadingType.INITIAL_LOAD;\n  var isWaitingForActivityLoadingTime = true;\n  var loadingTimeCandidates = [];\n  function invokeCallbackIfAllCandidatesAreReceived() {\n    if (!isWaitingForActivityLoadingTime && !isWaitingForLoadEvent && loadingTimeCandidates.length > 0) {\n      callback(Math.max.apply(Math, loadingTimeCandidates));\n    }\n  }\n  return {\n    setLoadEvent: function (loadEvent) {\n      if (isWaitingForLoadEvent) {\n        isWaitingForLoadEvent = false;\n        loadingTimeCandidates.push(loadEvent);\n        invokeCallbackIfAllCandidatesAreReceived();\n      }\n    },\n    setActivityLoadingTime: function (activityLoadingTime) {\n      if (isWaitingForActivityLoadingTime) {\n        isWaitingForActivityLoadingTime = false;\n        if (activityLoadingTime !== undefined) {\n          loadingTimeCandidates.push(activityLoadingTime);\n        }\n        invokeCallbackIfAllCandidatesAreReceived();\n      }\n    }\n  };\n}\nfunction trackActivityLoadingTime(lifeCycle, domMutationObservable, callback) {\n  var startTime = timeStampNow();\n  var stopWaitIdlePageActivity = waitIdlePageActivity(lifeCycle, domMutationObservable, function (params) {\n    if (params.hadActivity) {\n      callback(elapsed(startTime, params.endTime));\n    } else {\n      callback(undefined);\n    }\n  }).stop;\n  return {\n    stop: stopWaitIdlePageActivity\n  };\n}\n/**\n * Track layout shifts (LS) occurring during the Views.  This yields multiple values that can be\n * added up to compute the cumulated layout shift (CLS).\n *\n * See isLayoutShiftSupported to check for browser support.\n *\n * Documentation: https://web.dev/cls/\n * Reference implementation: https://github.com/GoogleChrome/web-vitals/blob/master/src/getCLS.ts\n */\nfunction trackLayoutShift(lifeCycle, callback) {\n  var stop = lifeCycle.subscribe(LifeCycleEventType.PERFORMANCE_ENTRY_COLLECTED, function (entry) {\n    if (entry.entryType === 'layout-shift' && !entry.hadRecentInput) {\n      callback(entry.value);\n    }\n  }).unsubscribe;\n  return {\n    stop: stop\n  };\n}\n/**\n * Check whether `layout-shift` is supported by the browser.\n */\nfunction isLayoutShiftSupported() {\n  return supportPerformanceTimingEvent('layout-shift');\n}","map":{"version":3,"names":["noop","elapsed","round","timeStampNow","supportPerformanceTimingEvent","ViewLoadingType","LifeCycleEventType","trackEventCounts","waitIdlePageActivity","trackViewMetrics","lifeCycle","domMutationObservable","scheduleViewUpdate","loadingType","viewMetrics","eventCounts","errorCount","longTaskCount","resourceCount","userActionCount","stopEventCountsTracking","newEventCounts","stop","_a","trackLoadingTime","newLoadingTime","loadingTime","setActivityLoadingTime","setLoadEvent","stopActivityLoadingTimeTracking","trackActivityLoadingTime","stopCLSTracking","isLayoutShiftSupported","cumulativeLayoutShift","trackLayoutShift","layoutShift","loadType","callback","isWaitingForLoadEvent","INITIAL_LOAD","isWaitingForActivityLoadingTime","loadingTimeCandidates","invokeCallbackIfAllCandidatesAreReceived","length","Math","max","apply","loadEvent","push","activityLoadingTime","undefined","startTime","stopWaitIdlePageActivity","params","hadActivity","endTime","subscribe","PERFORMANCE_ENTRY_COLLECTED","entry","entryType","hadRecentInput","value","unsubscribe"],"sources":["../../../../src/domain/rumEventsCollection/view/trackViewMetrics.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}