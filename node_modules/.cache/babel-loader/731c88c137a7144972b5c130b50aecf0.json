{"ast":null,"code":"import { ErrorSource } from './error';\nimport { clocksNow } from './timeUtils';\nimport { ONE_MINUTE } from './utils';\nexport function createErrorFilter(configuration, onLimitReached) {\n  var errorCount = 0;\n  var allowNextError = false;\n  return {\n    isLimitReached: function () {\n      if (errorCount === 0) {\n        setTimeout(function () {\n          errorCount = 0;\n        }, ONE_MINUTE);\n      }\n      errorCount += 1;\n      if (errorCount <= configuration.maxErrorsByMinute || allowNextError) {\n        allowNextError = false;\n        return false;\n      }\n      if (errorCount === configuration.maxErrorsByMinute + 1) {\n        allowNextError = true;\n        try {\n          onLimitReached({\n            message: \"Reached max number of errors by minute: \" + configuration.maxErrorsByMinute,\n            source: ErrorSource.AGENT,\n            startClocks: clocksNow()\n          });\n        } finally {\n          allowNextError = false;\n        }\n      }\n      return true;\n    }\n  };\n}","map":{"version":3,"names":["ErrorSource","clocksNow","ONE_MINUTE","createErrorFilter","configuration","onLimitReached","errorCount","allowNextError","isLimitReached","setTimeout","maxErrorsByMinute","message","source","AGENT","startClocks"],"sources":["../../src/tools/errorFilter.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,WAAW,QAAkB,SAAS;AAC/C,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,UAAU,QAAQ,SAAS;AAIpC,OAAM,SAAUC,iBAAiBA,CAACC,aAA4B,EAAEC,cAA8C;EAC5G,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,cAAc,GAAG,KAAK;EAE1B,OAAO;IACLC,cAAc,WAAAA,CAAA;MACZ,IAAIF,UAAU,KAAK,CAAC,EAAE;QACpBG,UAAU,CAAC;UACTH,UAAU,GAAG,CAAC;QAChB,CAAC,EAAEJ,UAAU,CAAC;;MAGhBI,UAAU,IAAI,CAAC;MACf,IAAIA,UAAU,IAAIF,aAAa,CAACM,iBAAiB,IAAIH,cAAc,EAAE;QACnEA,cAAc,GAAG,KAAK;QACtB,OAAO,KAAK;;MAGd,IAAID,UAAU,KAAKF,aAAa,CAACM,iBAAiB,GAAG,CAAC,EAAE;QACtDH,cAAc,GAAG,IAAI;QACrB,IAAI;UACFF,cAAc,CAAC;YACbM,OAAO,EAAE,6CAA2CP,aAAa,CAACM,iBAAmB;YACrFE,MAAM,EAAEZ,WAAW,CAACa,KAAK;YACzBC,WAAW,EAAEb,SAAS;WACvB,CAAC;SACH,SAAS;UACRM,cAAc,GAAG,KAAK;;;MAI1B,OAAO,IAAI;IACb;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module"}