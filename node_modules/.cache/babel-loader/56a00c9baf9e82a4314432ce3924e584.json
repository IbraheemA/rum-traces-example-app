{"ast":null,"code":"import { monitor } from '../internalMonitoring';\nimport { computeStackTrace, augmentStackTraceWithInitialElement } from './computeStackTrace';\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\n// eslint-disable-next-line  max-len\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\n/**\n * Cross-browser processing of unhandled exceptions\n *\n * Syntax:\n * ```js\n *   subscribe(function(stackInfo) { ... })\n *   unsubscribe(function(stackInfo) { ... })\n *   report(exception)\n *   try { ...code... } catch(ex) { report(ex); }\n * ```\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *     on top frame; column number is not guaranteed\n *   - Opera: full stack trace with line and column numbers\n *   - Chrome: full stack trace with line and column numbers\n *   - Safari: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *   - IE: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where report was called.\n *\n * Handlers receive a StackTrace object as described in the\n * computeStackTrace docs.\n *\n * @memberof TraceKit\n * @namespace\n */\n/**\n * Reports an unhandled Error.\n * @param {Error} ex\n * @memberof report\n * @throws An exception if an incomplete stack trace is detected (old IE browsers).\n */\nexport function report(ex) {\n  if (lastExceptionStack) {\n    if (lastException === ex) {\n      return; // already caught by an inner catch block, ignore\n    }\n    processLastException();\n  }\n  var stack = computeStackTrace(ex);\n  lastExceptionStack = stack;\n  lastException = ex;\n  // If the stack trace is incomplete, wait for 2 seconds for\n  // slow slow IE to see if onerror occurs or not before reporting\n  // this exception; otherwise, we will end up with an incomplete\n  // stack trace\n  setTimeout(monitor(function () {\n    if (lastException === ex) {\n      processLastException();\n    }\n  }), stack.incomplete ? 2000 : 0);\n  throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n}\nvar handlers = [];\nvar lastException;\nvar lastExceptionStack;\n/**\n * Add a crash handler.\n * @param {Function} handler\n * @memberof report\n */\nexport function subscribe(handler) {\n  installGlobalHandler();\n  installGlobalUnhandledRejectionHandler();\n  handlers.push(handler);\n}\n/**\n * Remove a crash handler.\n * @param {Function} handler\n * @memberof report\n */\nexport function unsubscribe(handler) {\n  for (var i = handlers.length - 1; i >= 0; i -= 1) {\n    if (handlers[i] === handler) {\n      handlers.splice(i, 1);\n    }\n  }\n  if (handlers.length === 0) {\n    uninstallGlobalHandler();\n    uninstallGlobalUnhandledRejectionHandler();\n  }\n}\n/**\n * Dispatch stack information to all handlers.\n * @param {StackTrace} stack\n * @param {boolean} isWindowError Is this a top-level window error?\n * @param {Error=} error The error that's being handled (if available, null otherwise)\n * @memberof report\n * @throws An exception if an error occurs while calling an handler.\n */\nfunction notifyHandlers(stack, isWindowError, error) {\n  var exception;\n  handlers.forEach(function (handler) {\n    try {\n      handler(stack, isWindowError, error);\n    } catch (inner) {\n      exception = inner;\n    }\n  });\n  if (exception) {\n    throw exception;\n  }\n}\nvar oldOnerrorHandler;\nvar onErrorHandlerInstalled;\nvar oldOnunhandledrejectionHandler;\nvar onUnhandledRejectionHandlerInstalled;\n/**\n * Ensures all global unhandled exceptions are recorded.\n * Supported by Gecko and IE.\n * @param {Event|string} message Error message.\n * @param {string=} url URL of script that generated the exception.\n * @param {(number|string)=} lineNo The line number at which the error occurred.\n * @param {(number|string)=} columnNo The column number at which the error occurred.\n * @param {Error=} errorObj The actual Error object.\n * @memberof report\n */\nexport function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\n  var stack;\n  if (lastExceptionStack) {\n    augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo);\n    processLastException();\n  } else if (errorObj) {\n    stack = computeStackTrace(errorObj);\n    notifyHandlers(stack, true, errorObj);\n  } else {\n    var location_1 = {\n      url: url,\n      column: columnNo,\n      line: lineNo\n    };\n    var name_1;\n    var msg = message;\n    if ({}.toString.call(message) === '[object String]') {\n      var groups = ERROR_TYPES_RE.exec(msg);\n      if (groups) {\n        name_1 = groups[1];\n        msg = groups[2];\n      }\n    }\n    stack = {\n      name: name_1,\n      message: typeof msg === 'string' ? msg : undefined,\n      stack: [location_1]\n    };\n    notifyHandlers(stack, true, message);\n  }\n  if (oldOnerrorHandler) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return oldOnerrorHandler.apply(this, arguments);\n  }\n  return false;\n}\n/**\n * Ensures all unhandled rejections are recorded.\n * @param {PromiseRejectionEvent} e event.\n * @memberof report\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onunhandledrejection\n * @see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n */\nfunction traceKitWindowOnUnhandledRejection(e) {\n  var reason = e.reason || 'Empty reason';\n  var stack = computeStackTrace(reason);\n  notifyHandlers(stack, true, reason);\n}\n/**\n * Install a global onerror handler\n * @memberof report\n */\nfunction installGlobalHandler() {\n  if (onErrorHandlerInstalled) {\n    return;\n  }\n  oldOnerrorHandler = window.onerror;\n  window.onerror = monitor(traceKitWindowOnError);\n  onErrorHandlerInstalled = true;\n}\n/**\n * Uninstall the global onerror handler\n * @memberof report\n */\nfunction uninstallGlobalHandler() {\n  if (onErrorHandlerInstalled) {\n    window.onerror = oldOnerrorHandler;\n    onErrorHandlerInstalled = false;\n  }\n}\n/**\n * Install a global onunhandledrejection handler\n * @memberof report\n */\nfunction installGlobalUnhandledRejectionHandler() {\n  if (onUnhandledRejectionHandlerInstalled) {\n    return;\n  }\n  oldOnunhandledrejectionHandler = window.onunhandledrejection !== null ? window.onunhandledrejection : undefined;\n  window.onunhandledrejection = monitor(traceKitWindowOnUnhandledRejection);\n  onUnhandledRejectionHandlerInstalled = true;\n}\n/**\n * Uninstall the global onunhandledrejection handler\n * @memberof report\n */\nfunction uninstallGlobalUnhandledRejectionHandler() {\n  if (onUnhandledRejectionHandlerInstalled) {\n    window.onunhandledrejection = oldOnunhandledrejectionHandler;\n    onUnhandledRejectionHandlerInstalled = false;\n  }\n}\n/**\n * Process the most recent exception\n * @memberof report\n */\nfunction processLastException() {\n  var currentLastExceptionStack = lastExceptionStack;\n  var currentLastException = lastException;\n  lastExceptionStack = undefined;\n  lastException = undefined;\n  notifyHandlers(currentLastExceptionStack, false, currentLastException);\n}","map":{"version":3,"names":["monitor","computeStackTrace","augmentStackTraceWithInitialElement","ERROR_TYPES_RE","report","ex","lastExceptionStack","lastException","processLastException","stack","setTimeout","incomplete","handlers","subscribe","handler","installGlobalHandler","installGlobalUnhandledRejectionHandler","push","unsubscribe","i","length","splice","uninstallGlobalHandler","uninstallGlobalUnhandledRejectionHandler","notifyHandlers","isWindowError","error","exception","forEach","inner","oldOnerrorHandler","onErrorHandlerInstalled","oldOnunhandledrejectionHandler","onUnhandledRejectionHandlerInstalled","traceKitWindowOnError","message","url","lineNo","columnNo","errorObj","location_1","column","line","name_1","msg","toString","call","groups","exec","name","undefined","apply","arguments","traceKitWindowOnUnhandledRejection","e","reason","window","onerror","onunhandledrejection","currentLastExceptionStack","currentLastException"],"sources":["../../../src/domain/tracekit/report.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}