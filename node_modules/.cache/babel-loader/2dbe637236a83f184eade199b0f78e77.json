{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { callMonitored, monitor } from '../domain/internalMonitoring';\nimport { elapsed, relativeNow, clocksNow, timeStampNow } from '../tools/timeUtils';\nimport { normalizeUrl } from '../tools/urlPolyfill';\nvar xhrProxySingleton;\nvar beforeSendCallbacks = [];\nvar onRequestCompleteCallbacks = [];\nvar originalXhrOpen;\nvar originalXhrSend;\nvar originalXhrAbort;\nexport function startXhrProxy() {\n  if (!xhrProxySingleton) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalXhrOpen = XMLHttpRequest.prototype.open;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalXhrSend = XMLHttpRequest.prototype.send;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalXhrAbort = XMLHttpRequest.prototype.abort;\n    XMLHttpRequest.prototype.open = openXhr;\n    XMLHttpRequest.prototype.send = sendXhr;\n    XMLHttpRequest.prototype.abort = abortXhr;\n    xhrProxySingleton = {\n      beforeSend: function (callback) {\n        beforeSendCallbacks.push(callback);\n      },\n      onRequestComplete: function (callback) {\n        onRequestCompleteCallbacks.push(callback);\n      }\n    };\n  }\n  return xhrProxySingleton;\n}\nexport function resetXhrProxy() {\n  if (xhrProxySingleton) {\n    xhrProxySingleton = undefined;\n    beforeSendCallbacks.length = 0;\n    onRequestCompleteCallbacks.length = 0;\n    XMLHttpRequest.prototype.open = originalXhrOpen;\n    XMLHttpRequest.prototype.send = originalXhrSend;\n    XMLHttpRequest.prototype.abort = originalXhrAbort;\n  }\n}\nfunction openXhr(method, url) {\n  var _this = this;\n  callMonitored(function () {\n    // WARN: since this data structure is tied to the instance, it is shared by both logs and rum\n    // and can be used by different code versions depending on customer setup\n    // so it should stay compatible with older versions\n    _this._datadog_xhr = {\n      method: method,\n      url: normalizeUrl(url)\n    };\n  });\n  return originalXhrOpen.apply(this, arguments);\n}\nfunction sendXhr() {\n  var _this = this;\n  callMonitored(function () {\n    if (!_this._datadog_xhr) {\n      return;\n    }\n    _this._datadog_xhr.startTime = relativeNow();\n    _this._datadog_xhr.startClocks = clocksNow();\n    _this._datadog_xhr.isAborted = false;\n    var hasBeenReported = false;\n    var originalOnreadystatechange = _this.onreadystatechange;\n    var onreadystatechange = function () {\n      if (this.readyState === XMLHttpRequest.DONE) {\n        // Try to report the XHR as soon as possible, because the XHR may be mutated by the\n        // application during a future event. For example, Angular is calling .abort() on\n        // completed requests during a onreadystatechange event, so the status becomes '0'\n        // before the request is collected.\n        onEnd();\n      }\n      if (originalOnreadystatechange) {\n        originalOnreadystatechange.apply(this, arguments);\n      }\n    };\n    var onEnd = monitor(function () {\n      _this.removeEventListener('loadend', onEnd);\n      // if the onreadystatechange hasn't been overridden by the user after the send()\n      if (_this.onreadystatechange === onreadystatechange) {\n        _this.onreadystatechange = originalOnreadystatechange;\n      }\n      if (hasBeenReported) {\n        return;\n      }\n      hasBeenReported = true;\n      reportXhr(_this);\n    });\n    _this.onreadystatechange = onreadystatechange;\n    _this.addEventListener('loadend', onEnd);\n    beforeSendCallbacks.forEach(function (callback) {\n      return callback(_this._datadog_xhr, _this);\n    });\n  });\n  return originalXhrSend.apply(this, arguments);\n}\nfunction abortXhr() {\n  var _this = this;\n  callMonitored(function () {\n    if (_this._datadog_xhr) {\n      _this._datadog_xhr.isAborted = true;\n    }\n  });\n  return originalXhrAbort.apply(this, arguments);\n}\nfunction reportXhr(xhr) {\n  xhr._datadog_xhr.duration = elapsed(xhr._datadog_xhr.startClocks.timeStamp, timeStampNow());\n  xhr._datadog_xhr.responseText = xhr.response;\n  xhr._datadog_xhr.status = xhr.status;\n  xhr._datadog_xhr.xhr = xhr;\n  onRequestCompleteCallbacks.forEach(function (callback) {\n    return callback(__assign({}, xhr._datadog_xhr));\n  });\n}","map":{"version":3,"names":["callMonitored","monitor","elapsed","relativeNow","clocksNow","timeStampNow","normalizeUrl","xhrProxySingleton","beforeSendCallbacks","onRequestCompleteCallbacks","originalXhrOpen","originalXhrSend","originalXhrAbort","startXhrProxy","XMLHttpRequest","prototype","open","send","abort","openXhr","sendXhr","abortXhr","beforeSend","callback","push","onRequestComplete","resetXhrProxy","undefined","length","method","url","_this","_datadog_xhr","apply","arguments","startTime","startClocks","isAborted","hasBeenReported","originalOnreadystatechange","onreadystatechange","readyState","DONE","onEnd","removeEventListener","reportXhr","addEventListener","forEach","xhr","duration","timeStamp","responseText","response","status","__assign"],"sources":["../../src/browser/xhrProxy.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}