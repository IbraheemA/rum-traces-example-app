{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { display } from '../tools/display';\nimport { addEventListener, jsonStringify, noop, objectValues } from '../tools/utils';\nimport { monitor, addErrorToMonitoringBatch } from '../domain/internalMonitoring';\n// https://en.wikipedia.org/wiki/UTF-8\nvar HAS_MULTI_BYTES_CHARACTERS = /[^\\u0000-\\u007F]/;\n/**\n * Use POST request without content type to:\n * - avoid CORS preflight requests\n * - allow usage of sendBeacon\n *\n * multiple elements are sent separated by \\n in order\n * to be parsed correctly without content type header\n */\nvar HttpRequest = /** @class */function () {\n  function HttpRequest(endpointUrl, bytesLimit, withBatchTime) {\n    if (withBatchTime === void 0) {\n      withBatchTime = false;\n    }\n    this.endpointUrl = endpointUrl;\n    this.bytesLimit = bytesLimit;\n    this.withBatchTime = withBatchTime;\n  }\n  HttpRequest.prototype.send = function (data, size) {\n    var url = this.withBatchTime ? addBatchTime(this.endpointUrl) : this.endpointUrl;\n    if (navigator.sendBeacon && size < this.bytesLimit) {\n      try {\n        var isQueued = navigator.sendBeacon(url, data);\n        if (isQueued) {\n          return;\n        }\n      } catch (e) {\n        reportBeaconError(e);\n      }\n    }\n    var request = new XMLHttpRequest();\n    request.open('POST', url, true);\n    request.send(data);\n  };\n  return HttpRequest;\n}();\nexport { HttpRequest };\nfunction addBatchTime(url) {\n  return \"\" + url + (url.indexOf('?') === -1 ? '?' : '&') + \"batch_time=\" + new Date().getTime();\n}\nvar hasReportedBeaconError = false;\nfunction reportBeaconError(e) {\n  if (!hasReportedBeaconError) {\n    hasReportedBeaconError = true;\n    addErrorToMonitoringBatch(e);\n  }\n}\nvar Batch = /** @class */function () {\n  function Batch(request, maxSize, bytesLimit, maxMessageSize, flushTimeout, beforeUnloadCallback) {\n    if (beforeUnloadCallback === void 0) {\n      beforeUnloadCallback = noop;\n    }\n    this.request = request;\n    this.maxSize = maxSize;\n    this.bytesLimit = bytesLimit;\n    this.maxMessageSize = maxMessageSize;\n    this.flushTimeout = flushTimeout;\n    this.beforeUnloadCallback = beforeUnloadCallback;\n    this.pushOnlyBuffer = [];\n    this.upsertBuffer = {};\n    this.bufferBytesSize = 0;\n    this.bufferMessageCount = 0;\n    this.flushOnVisibilityHidden();\n    this.flushPeriodically();\n  }\n  Batch.prototype.add = function (message) {\n    this.addOrUpdate(message);\n  };\n  Batch.prototype.upsert = function (message, key) {\n    this.addOrUpdate(message, key);\n  };\n  Batch.prototype.flush = function () {\n    if (this.bufferMessageCount !== 0) {\n      var messages = __spreadArrays(this.pushOnlyBuffer, objectValues(this.upsertBuffer));\n      this.request.send(messages.join('\\n'), this.bufferBytesSize);\n      this.pushOnlyBuffer = [];\n      this.upsertBuffer = {};\n      this.bufferBytesSize = 0;\n      this.bufferMessageCount = 0;\n    }\n  };\n  Batch.prototype.sizeInBytes = function (candidate) {\n    // Accurate byte size computations can degrade performances when there is a lot of events to process\n    if (!HAS_MULTI_BYTES_CHARACTERS.test(candidate)) {\n      return candidate.length;\n    }\n    if (window.TextEncoder !== undefined) {\n      return new TextEncoder().encode(candidate).length;\n    }\n    return new Blob([candidate]).size;\n  };\n  Batch.prototype.addOrUpdate = function (message, key) {\n    var _a = this.process(message),\n      processedMessage = _a.processedMessage,\n      messageBytesSize = _a.messageBytesSize;\n    if (messageBytesSize >= this.maxMessageSize) {\n      display.warn(\"Discarded a message whose size was bigger than the maximum allowed size \" + this.maxMessageSize + \"KB.\");\n      return;\n    }\n    if (this.hasMessageFor(key)) {\n      this.remove(key);\n    }\n    if (this.willReachedBytesLimitWith(messageBytesSize)) {\n      this.flush();\n    }\n    this.push(processedMessage, messageBytesSize, key);\n    if (this.isFull()) {\n      this.flush();\n    }\n  };\n  Batch.prototype.process = function (message) {\n    var processedMessage = jsonStringify(message);\n    var messageBytesSize = this.sizeInBytes(processedMessage);\n    return {\n      processedMessage: processedMessage,\n      messageBytesSize: messageBytesSize\n    };\n  };\n  Batch.prototype.push = function (processedMessage, messageBytesSize, key) {\n    if (this.bufferMessageCount > 0) {\n      // \\n separator at serialization\n      this.bufferBytesSize += 1;\n    }\n    if (key !== undefined) {\n      this.upsertBuffer[key] = processedMessage;\n    } else {\n      this.pushOnlyBuffer.push(processedMessage);\n    }\n    this.bufferBytesSize += messageBytesSize;\n    this.bufferMessageCount += 1;\n  };\n  Batch.prototype.remove = function (key) {\n    var removedMessage = this.upsertBuffer[key];\n    delete this.upsertBuffer[key];\n    var messageBytesSize = this.sizeInBytes(removedMessage);\n    this.bufferBytesSize -= messageBytesSize;\n    this.bufferMessageCount -= 1;\n    if (this.bufferMessageCount > 0) {\n      this.bufferBytesSize -= 1;\n    }\n  };\n  Batch.prototype.hasMessageFor = function (key) {\n    return key !== undefined && this.upsertBuffer[key] !== undefined;\n  };\n  Batch.prototype.willReachedBytesLimitWith = function (messageBytesSize) {\n    // byte of the separator at the end of the message\n    return this.bufferBytesSize + messageBytesSize + 1 >= this.bytesLimit;\n  };\n  Batch.prototype.isFull = function () {\n    return this.bufferMessageCount === this.maxSize || this.bufferBytesSize >= this.bytesLimit;\n  };\n  Batch.prototype.flushPeriodically = function () {\n    var _this = this;\n    setTimeout(monitor(function () {\n      _this.flush();\n      _this.flushPeriodically();\n    }), this.flushTimeout);\n  };\n  Batch.prototype.flushOnVisibilityHidden = function () {\n    var _this = this;\n    /**\n     * With sendBeacon, requests are guaranteed to be successfully sent during document unload\n     */\n    // @ts-ignore this function is not always defined\n    if (navigator.sendBeacon) {\n      /**\n       * beforeunload is called before visibilitychange\n       * register first to be sure to be called before flush on beforeunload\n       * caveat: unload can still be canceled by another listener\n       */\n      addEventListener(window, \"beforeunload\" /* BEFORE_UNLOAD */, this.beforeUnloadCallback);\n      /**\n       * Only event that guarantee to fire on mobile devices when the page transitions to background state\n       * (e.g. when user switches to a different application, goes to homescreen, etc), or is being unloaded.\n       */\n      addEventListener(document, \"visibilitychange\" /* VISIBILITY_CHANGE */, function () {\n        if (document.visibilityState === 'hidden') {\n          _this.flush();\n        }\n      });\n      /**\n       * Safari does not support yet to send a request during:\n       * - a visibility change during doc unload (cf: https://bugs.webkit.org/show_bug.cgi?id=194897)\n       * - a page hide transition (cf: https://bugs.webkit.org/show_bug.cgi?id=188329)\n       */\n      addEventListener(window, \"beforeunload\" /* BEFORE_UNLOAD */, function () {\n        return _this.flush();\n      });\n    }\n  };\n  return Batch;\n}();\nexport { Batch };","map":{"version":3,"names":["display","addEventListener","jsonStringify","noop","objectValues","monitor","addErrorToMonitoringBatch","HAS_MULTI_BYTES_CHARACTERS","HttpRequest","endpointUrl","bytesLimit","withBatchTime","prototype","send","data","size","url","addBatchTime","navigator","sendBeacon","isQueued","e","reportBeaconError","request","XMLHttpRequest","open","indexOf","Date","getTime","hasReportedBeaconError","Batch","maxSize","maxMessageSize","flushTimeout","beforeUnloadCallback","pushOnlyBuffer","upsertBuffer","bufferBytesSize","bufferMessageCount","flushOnVisibilityHidden","flushPeriodically","add","message","addOrUpdate","upsert","key","flush","messages","__spreadArrays","join","sizeInBytes","candidate","test","length","window","TextEncoder","undefined","encode","Blob","_a","process","processedMessage","messageBytesSize","warn","hasMessageFor","remove","willReachedBytesLimitWith","push","isFull","removedMessage","_this","setTimeout","document","visibilityState"],"sources":["../../src/transport/transport.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}