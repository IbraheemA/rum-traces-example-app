{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { BoundedBuffer, combine, createContextManager, defineGlobal, getGlobalObject, isPercentage, makePublicApi, monitor, display } from '@datadog/browser-core';\nimport { Logger } from '../domain/logger';\nimport { startLogs } from './startLogs';\nexport var datadogLogs = makeLogsPublicApi(startLogs);\ndefineGlobal(getGlobalObject(), 'DD_LOGS', datadogLogs);\nexport function makeLogsPublicApi(startLogsImpl) {\n  var isAlreadyInitialized = false;\n  var globalContextManager = createContextManager();\n  var customLoggers = {};\n  var beforeInitSendLog = new BoundedBuffer();\n  var sendLogStrategy = function (message, currentContext) {\n    beforeInitSendLog.add(function () {\n      return sendLogStrategy(message, currentContext);\n    });\n  };\n  var logger = new Logger(sendLog);\n  return makePublicApi({\n    logger: logger,\n    init: monitor(function (userConfiguration) {\n      if (!canInitLogs(userConfiguration)) {\n        return;\n      }\n      if (userConfiguration.publicApiKey) {\n        userConfiguration.clientToken = userConfiguration.publicApiKey;\n        display.warn('Public API Key is deprecated. Please use Client Token instead.');\n      }\n      sendLogStrategy = startLogsImpl(userConfiguration, logger, globalContextManager.get);\n      beforeInitSendLog.drain();\n      isAlreadyInitialized = true;\n    }),\n    getLoggerGlobalContext: monitor(globalContextManager.get),\n    setLoggerGlobalContext: monitor(globalContextManager.set),\n    addLoggerGlobalContext: monitor(globalContextManager.add),\n    removeLoggerGlobalContext: monitor(globalContextManager.remove),\n    createLogger: monitor(function (name, conf) {\n      if (conf === void 0) {\n        conf = {};\n      }\n      customLoggers[name] = new Logger(sendLog, conf.handler, conf.level, __assign(__assign({}, conf.context), {\n        logger: {\n          name: name\n        }\n      }));\n      return customLoggers[name];\n    }),\n    getLogger: monitor(function (name) {\n      return customLoggers[name];\n    })\n  });\n  function canInitLogs(userConfiguration) {\n    if (isAlreadyInitialized) {\n      if (!userConfiguration.silentMultipleInit) {\n        display.error('DD_LOGS is already initialized.');\n      }\n      return false;\n    }\n    if (!userConfiguration || !userConfiguration.publicApiKey && !userConfiguration.clientToken) {\n      display.error('Client Token is not configured, we will not send any data.');\n      return false;\n    }\n    if (userConfiguration.sampleRate !== undefined && !isPercentage(userConfiguration.sampleRate)) {\n      display.error('Sample Rate should be a number between 0 and 100');\n      return false;\n    }\n    return true;\n  }\n  function sendLog(message) {\n    sendLogStrategy(message, combine({\n      date: Date.now(),\n      view: {\n        referrer: document.referrer,\n        url: window.location.href\n      }\n    }, globalContextManager.get()));\n  }\n}","map":{"version":3,"names":["BoundedBuffer","combine","createContextManager","defineGlobal","getGlobalObject","isPercentage","makePublicApi","monitor","display","Logger","startLogs","datadogLogs","makeLogsPublicApi","startLogsImpl","isAlreadyInitialized","globalContextManager","customLoggers","beforeInitSendLog","sendLogStrategy","message","currentContext","add","logger","sendLog","init","userConfiguration","canInitLogs","publicApiKey","clientToken","warn","get","drain","getLoggerGlobalContext","setLoggerGlobalContext","set","addLoggerGlobalContext","removeLoggerGlobalContext","remove","createLogger","name","conf","handler","level","__assign","context","getLogger","silentMultipleInit","error","sampleRate","undefined","date","Date","now","view","referrer","document","url","window","location","href"],"sources":["../../src/boot/logs.entry.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}