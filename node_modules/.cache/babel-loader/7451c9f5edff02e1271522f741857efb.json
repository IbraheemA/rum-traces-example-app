{"ast":null,"code":"'use strict';\n\nclass NoopSpanProcessor {\n  forceFlush() {\n    return Promise.resolve();\n  }\n  onStart(span, context) {}\n  onEnd(span) {}\n  shutdown() {\n    return Promise.resolve();\n  }\n}\nclass MultiSpanProcessor extends NoopSpanProcessor {\n  constructor(spanProcessors) {\n    super();\n    this._processors = spanProcessors;\n  }\n  forceFlush() {\n    return Promise.all(this._processors.map(p => p.forceFlush()));\n  }\n  onStart(span, context) {\n    for (const processor of this._processors) {\n      processor.onStart(span, context);\n    }\n  }\n  onEnd(span) {\n    for (const processor of this._processors) {\n      processor.onEnd(span);\n    }\n  }\n  shutdown() {\n    return Promise.all(this._processors.map(p => p.shutdown()));\n  }\n}\nmodule.exports = {\n  MultiSpanProcessor,\n  NoopSpanProcessor\n};","map":{"version":3,"names":["NoopSpanProcessor","forceFlush","Promise","resolve","onStart","span","context","onEnd","shutdown","MultiSpanProcessor","constructor","spanProcessors","_processors","all","map","p","processor","module","exports"],"sources":["/Users/ibraheem.aboulnaga/rum-traces-example-app/node_modules/dd-trace/packages/dd-trace/src/opentelemetry/span_processor.js"],"sourcesContent":["'use strict'\n\nclass NoopSpanProcessor {\n  forceFlush () {\n    return Promise.resolve()\n  }\n\n  onStart (span, context) { }\n  onEnd (span) { }\n\n  shutdown () {\n    return Promise.resolve()\n  }\n}\n\nclass MultiSpanProcessor extends NoopSpanProcessor {\n  constructor (spanProcessors) {\n    super()\n    this._processors = spanProcessors\n  }\n\n  forceFlush () {\n    return Promise.all(\n      this._processors.map(p => p.forceFlush())\n    )\n  }\n\n  onStart (span, context) {\n    for (const processor of this._processors) {\n      processor.onStart(span, context)\n    }\n  }\n\n  onEnd (span) {\n    for (const processor of this._processors) {\n      processor.onEnd(span)\n    }\n  }\n\n  shutdown () {\n    return Promise.all(\n      this._processors.map(p => p.shutdown())\n    )\n  }\n}\n\nmodule.exports = {\n  MultiSpanProcessor,\n  NoopSpanProcessor\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,iBAAiB,CAAC;EACtBC,UAAUA,CAAA,EAAI;IACZ,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC;EAC1B;EAEAC,OAAOA,CAAEC,IAAI,EAAEC,OAAO,EAAE,CAAE;EAC1BC,KAAKA,CAAEF,IAAI,EAAE,CAAE;EAEfG,QAAQA,CAAA,EAAI;IACV,OAAON,OAAO,CAACC,OAAO,CAAC,CAAC;EAC1B;AACF;AAEA,MAAMM,kBAAkB,SAAST,iBAAiB,CAAC;EACjDU,WAAWA,CAAEC,cAAc,EAAE;IAC3B,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,WAAW,GAAGD,cAAc;EACnC;EAEAV,UAAUA,CAAA,EAAI;IACZ,OAAOC,OAAO,CAACW,GAAG,CAChB,IAAI,CAACD,WAAW,CAACE,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACd,UAAU,CAAC,CAAC,CAC1C,CAAC;EACH;EAEAG,OAAOA,CAAEC,IAAI,EAAEC,OAAO,EAAE;IACtB,KAAK,MAAMU,SAAS,IAAI,IAAI,CAACJ,WAAW,EAAE;MACxCI,SAAS,CAACZ,OAAO,CAACC,IAAI,EAAEC,OAAO,CAAC;IAClC;EACF;EAEAC,KAAKA,CAAEF,IAAI,EAAE;IACX,KAAK,MAAMW,SAAS,IAAI,IAAI,CAACJ,WAAW,EAAE;MACxCI,SAAS,CAACT,KAAK,CAACF,IAAI,CAAC;IACvB;EACF;EAEAG,QAAQA,CAAA,EAAI;IACV,OAAON,OAAO,CAACW,GAAG,CAChB,IAAI,CAACD,WAAW,CAACE,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACP,QAAQ,CAAC,CAAC,CACxC,CAAC;EACH;AACF;AAEAS,MAAM,CAACC,OAAO,GAAG;EACfT,kBAAkB;EAClBT;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}