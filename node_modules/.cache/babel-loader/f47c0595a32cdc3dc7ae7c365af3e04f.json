{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { combine } from '../tools/context';\nimport { display } from '../tools/display';\nimport { toStackTraceString } from '../tools/error';\nimport { assign, jsonStringify } from '../tools/utils';\nimport { Batch, HttpRequest } from '../transport/transport';\nimport { computeStackTrace } from './tracekit';\nvar StatusType;\n(function (StatusType) {\n  StatusType[\"info\"] = \"info\";\n  StatusType[\"error\"] = \"error\";\n})(StatusType || (StatusType = {}));\nvar monitoringConfiguration = {\n  maxMessagesPerPage: 0,\n  sentMessageCount: 0\n};\nvar externalContextProvider;\nexport function startInternalMonitoring(configuration) {\n  if (configuration.internalMonitoringEndpoint) {\n    var batch = startMonitoringBatch(configuration);\n    assign(monitoringConfiguration, {\n      batch: batch,\n      maxMessagesPerPage: configuration.maxInternalMonitoringMessagesPerPage,\n      sentMessageCount: 0\n    });\n  }\n  return {\n    setExternalContextProvider: function (provider) {\n      externalContextProvider = provider;\n    }\n  };\n}\nfunction startMonitoringBatch(configuration) {\n  var primaryBatch = createMonitoringBatch(configuration.internalMonitoringEndpoint);\n  var replicaBatch;\n  if (configuration.replica !== undefined) {\n    replicaBatch = createMonitoringBatch(configuration.replica.internalMonitoringEndpoint);\n  }\n  function createMonitoringBatch(endpointUrl) {\n    return new Batch(new HttpRequest(endpointUrl, configuration.batchBytesLimit), configuration.maxBatchSize, configuration.batchBytesLimit, configuration.maxMessageSize, configuration.flushTimeout);\n  }\n  function withContext(message) {\n    return combine({\n      date: new Date().getTime(),\n      view: {\n        referrer: document.referrer,\n        url: window.location.href\n      }\n    }, externalContextProvider !== undefined ? externalContextProvider() : {}, message);\n  }\n  return {\n    add: function (message) {\n      var contextualizedMessage = withContext(message);\n      primaryBatch.add(contextualizedMessage);\n      if (replicaBatch) {\n        replicaBatch.add(contextualizedMessage);\n      }\n    }\n  };\n}\nexport function resetInternalMonitoring() {\n  monitoringConfiguration.batch = undefined;\n}\nexport function monitored(_, __, descriptor) {\n  var originalMethod = descriptor.value;\n  descriptor.value = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var decorated = monitoringConfiguration.batch ? monitor(originalMethod) : originalMethod;\n    return decorated.apply(this, args);\n  };\n}\nexport function monitor(fn) {\n  return function () {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return callMonitored(fn, this, arguments);\n  }; // consider output type has input type\n}\nexport function callMonitored(fn, context, args) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return fn.apply(context, args);\n  } catch (e) {\n    logErrorIfDebug(e);\n    try {\n      addErrorToMonitoringBatch(e);\n    } catch (e) {\n      logErrorIfDebug(e);\n    }\n  }\n}\nexport function addMonitoringMessage(message, context) {\n  logMessageIfDebug(message);\n  addToMonitoringBatch(__assign(__assign({\n    message: message\n  }, context), {\n    status: StatusType.info\n  }));\n}\nexport function addErrorToMonitoringBatch(e) {\n  addToMonitoringBatch(__assign(__assign({}, formatError(e)), {\n    status: StatusType.error\n  }));\n}\nfunction addToMonitoringBatch(message) {\n  if (monitoringConfiguration.batch && monitoringConfiguration.sentMessageCount < monitoringConfiguration.maxMessagesPerPage) {\n    monitoringConfiguration.sentMessageCount += 1;\n    monitoringConfiguration.batch.add(message);\n  }\n}\nfunction formatError(e) {\n  if (e instanceof Error) {\n    var stackTrace = computeStackTrace(e);\n    return {\n      error: {\n        kind: stackTrace.name,\n        stack: toStackTraceString(stackTrace)\n      },\n      message: stackTrace.message\n    };\n  }\n  return {\n    error: {\n      stack: 'Not an instance of error'\n    },\n    message: \"Uncaught \" + jsonStringify(e)\n  };\n}\nexport function setDebugMode(debugMode) {\n  monitoringConfiguration.debugMode = debugMode;\n}\nfunction logErrorIfDebug(e) {\n  if (monitoringConfiguration.debugMode) {\n    display.error('[INTERNAL ERROR]', e);\n  }\n}\nfunction logMessageIfDebug(message) {\n  if (monitoringConfiguration.debugMode) {\n    display.log('[MONITORING MESSAGE]', message);\n  }\n}","map":{"version":3,"names":["combine","display","toStackTraceString","assign","jsonStringify","Batch","HttpRequest","computeStackTrace","StatusType","monitoringConfiguration","maxMessagesPerPage","sentMessageCount","externalContextProvider","startInternalMonitoring","configuration","internalMonitoringEndpoint","batch","startMonitoringBatch","maxInternalMonitoringMessagesPerPage","setExternalContextProvider","provider","primaryBatch","createMonitoringBatch","replicaBatch","replica","undefined","endpointUrl","batchBytesLimit","maxBatchSize","maxMessageSize","flushTimeout","withContext","message","date","Date","getTime","view","referrer","document","url","window","location","href","add","contextualizedMessage","resetInternalMonitoring","monitored","_","__","descriptor","originalMethod","value","args","_i","arguments","length","decorated","monitor","apply","fn","callMonitored","context","e","logErrorIfDebug","addErrorToMonitoringBatch","addMonitoringMessage","logMessageIfDebug","addToMonitoringBatch","__assign","status","info","formatError","error","Error","stackTrace","kind","name","stack","setDebugMode","debugMode","log"],"sources":["../../src/domain/internalMonitoring.ts"],"sourcesContent":[null],"mappings":";AAAA,SAASA,OAAO,QAAiB,kBAAkB;AACnD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,kBAAkB,QAAQ,gBAAgB;AACnD,SAASC,MAAM,EAAEC,aAAa,QAAuC,gBAAgB;AACrF,SAASC,KAAK,EAAEC,WAAW,QAAQ,wBAAwB;AAE3D,SAASC,iBAAiB,QAAQ,YAAY;AAE9C,IAAKC,UAGJ;AAHD,WAAKA,UAAU;EACbA,UAAA,iBAAa;EACbA,UAAA,mBAAe;AACjB,CAAC,EAHIA,UAAU,KAAVA,UAAU;AAkBf,IAAMC,uBAAuB,GAKzB;EAAEC,kBAAkB,EAAE,CAAC;EAAEC,gBAAgB,EAAE;AAAC,CAAE;AAElD,IAAIC,uBAAsC;AAE1C,OAAM,SAAUC,uBAAuBA,CAACC,aAA4B;EAClE,IAAIA,aAAa,CAACC,0BAA0B,EAAE;IAC5C,IAAMC,KAAK,GAAGC,oBAAoB,CAACH,aAAa,CAAC;IAEjDX,MAAM,CAACM,uBAAuB,EAAE;MAC9BO,KAAK,EAAAA,KAAA;MACLN,kBAAkB,EAAEI,aAAa,CAACI,oCAAoC;MACtEP,gBAAgB,EAAE;KACnB,CAAC;;EAEJ,OAAO;IACLQ,0BAA0B,EAAE,SAAAA,CAACC,QAAuB;MAClDR,uBAAuB,GAAGQ,QAAQ;IACpC;GACD;AACH;AAEA,SAASH,oBAAoBA,CAACH,aAA4B;EACxD,IAAMO,YAAY,GAAGC,qBAAqB,CAACR,aAAa,CAACC,0BAA2B,CAAC;EACrF,IAAIQ,YAA+B;EACnC,IAAIT,aAAa,CAACU,OAAO,KAAKC,SAAS,EAAE;IACvCF,YAAY,GAAGD,qBAAqB,CAACR,aAAa,CAACU,OAAO,CAACT,0BAA0B,CAAC;;EAGxF,SAASO,qBAAqBA,CAACI,WAAmB;IAChD,OAAO,IAAIrB,KAAK,CACd,IAAIC,WAAW,CAACoB,WAAW,EAAEZ,aAAa,CAACa,eAAe,CAAC,EAC3Db,aAAa,CAACc,YAAY,EAC1Bd,aAAa,CAACa,eAAe,EAC7Bb,aAAa,CAACe,cAAc,EAC5Bf,aAAa,CAACgB,YAAY,CAC3B;EACH;EAEA,SAASC,WAAWA,CAACC,OAA0B;IAC7C,OAAOhC,OAAO,CACZ;MACEiC,IAAI,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;MAC1BC,IAAI,EAAE;QACJC,QAAQ,EAAEC,QAAQ,CAACD,QAAQ;QAC3BE,GAAG,EAAEC,MAAM,CAACC,QAAQ,CAACC;;KAExB,EACD9B,uBAAuB,KAAKa,SAAS,GAAGb,uBAAuB,EAAE,GAAG,EAAE,EACtEoB,OAAO,CACR;EACH;EAEA,OAAO;IACLW,GAAG,EAAH,SAAAA,CAAIX,OAA0B;MAC5B,IAAMY,qBAAqB,GAAGb,WAAW,CAACC,OAAO,CAAC;MAClDX,YAAY,CAACsB,GAAG,CAACC,qBAAqB,CAAC;MACvC,IAAIrB,YAAY,EAAE;QAChBA,YAAY,CAACoB,GAAG,CAACC,qBAAqB,CAAC;;IAE3C;GACD;AACH;AAEA,OAAM,SAAUC,uBAAuBA,CAAA;EACrCpC,uBAAuB,CAACO,KAAK,GAAGS,SAAS;AAC3C;AAEA,OAAM,SAAUqB,SAASA,CACvBC,CAAM,EACNC,EAAU,EACVC,UAAsC;EAEtC,IAAMC,cAAc,GAAGD,UAAU,CAACE,KAAM;EACxCF,UAAU,CAACE,KAAK,GAAG;IAAqB,IAAAC,IAAA;SAAA,IAAAC,EAAA,IAAsB,EAAtBA,EAAA,GAAAC,SAAA,CAAAC,MAAsB,EAAtBF,EAAA,EAAsB;MAAtBD,IAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;IACtC,IAAMG,SAAS,GAAG/C,uBAAuB,CAACO,KAAK,GAAGyC,OAAO,CAACP,cAAc,CAAC,GAAGA,cAAc;IAC1F,OAAOM,SAAS,CAACE,KAAK,CAAC,IAAI,EAAEN,IAAI,CAAkB;EACrD,CAAM;AACR;AAEA,OAAM,SAAUK,OAAOA,CAAoCE,EAAK;EAC9D,OAAQ;IACN;IACA,OAAOC,aAAa,CAACD,EAAE,EAAE,IAAI,EAAGL,SAAsC,CAAC;EACzE,CAAkB,EAAC;AACrB;AAQA,OAAM,SAAUM,aAAaA,CAC3BD,EAAK,EACLE,OAAa,EACbT,IAAU;EAEV,IAAI;IACF;IACA,OAAOO,EAAE,CAACD,KAAK,CAACG,OAAO,EAAET,IAAI,CAAC;GAC/B,CAAC,OAAOU,CAAC,EAAE;IACVC,eAAe,CAACD,CAAC,CAAC;IAClB,IAAI;MACFE,yBAAyB,CAACF,CAAC,CAAC;KAC7B,CAAC,OAAOA,CAAC,EAAE;MACVC,eAAe,CAACD,CAAC,CAAC;;;AAGxB;AAEA,OAAM,SAAUG,oBAAoBA,CAACjC,OAAe,EAAE6B,OAAiB;EACrEK,iBAAiB,CAAClC,OAAO,CAAC;EAC1BmC,oBAAoB,CAAAC,QAAA,CAAAA,QAAA;IAClBpC,OAAO,EAAAA;EAAA,GACJ6B,OAAO;IACVQ,MAAM,EAAE7D,UAAU,CAAC8D;EAAI,GACvB;AACJ;AAEA,OAAM,SAAUN,yBAAyBA,CAACF,CAAU;EAClDK,oBAAoB,CAAAC,QAAA,CAAAA,QAAA,KACfG,WAAW,CAACT,CAAC,CAAC;IACjBO,MAAM,EAAE7D,UAAU,CAACgE;EAAK,GACxB;AACJ;AAEA,SAASL,oBAAoBA,CAACnC,OAA0B;EACtD,IACEvB,uBAAuB,CAACO,KAAK,IAC7BP,uBAAuB,CAACE,gBAAgB,GAAGF,uBAAuB,CAACC,kBAAkB,EACrF;IACAD,uBAAuB,CAACE,gBAAgB,IAAI,CAAC;IAE7CF,uBAAuB,CAACO,KAAK,CAAC2B,GAAG,CAACX,OAAO,CAAC;;AAE9C;AAEA,SAASuC,WAAWA,CAACT,CAAU;EAC7B,IAAIA,CAAC,YAAYW,KAAK,EAAE;IACtB,IAAMC,UAAU,GAAGnE,iBAAiB,CAACuD,CAAC,CAAC;IACvC,OAAO;MACLU,KAAK,EAAE;QACLG,IAAI,EAAED,UAAU,CAACE,IAAI;QACrBC,KAAK,EAAE3E,kBAAkB,CAACwE,UAAU;OACrC;MACD1C,OAAO,EAAE0C,UAAU,CAAC1C;KACrB;;EAEH,OAAO;IACLwC,KAAK,EAAE;MACLK,KAAK,EAAE;KACR;IACD7C,OAAO,EAAE,cAAY5B,aAAa,CAAC0D,CAAC;GACrC;AACH;AAEA,OAAM,SAAUgB,YAAYA,CAACC,SAAkB;EAC7CtE,uBAAuB,CAACsE,SAAS,GAAGA,SAAS;AAC/C;AAEA,SAAShB,eAAeA,CAACD,CAAM;EAC7B,IAAIrD,uBAAuB,CAACsE,SAAS,EAAE;IACrC9E,OAAO,CAACuE,KAAK,CAAC,kBAAkB,EAAEV,CAAC,CAAC;;AAExC;AAEA,SAASI,iBAAiBA,CAAClC,OAAY;EACrC,IAAIvB,uBAAuB,CAACsE,SAAS,EAAE;IACrC9E,OAAO,CAAC+E,GAAG,CAAC,sBAAsB,EAAEhD,OAAO,CAAC;;AAEhD","ignoreList":[]},"metadata":{},"sourceType":"module"}