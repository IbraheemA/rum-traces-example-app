{"ast":null,"code":"'use strict';\n\nclass NoopLLMObs {\n  constructor(noopTracer) {\n    this._tracer = noopTracer;\n  }\n  get enabled() {\n    return false;\n  }\n  enable(options) {}\n  disable() {}\n  trace() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let fn = arguments.length > 1 ? arguments[1] : undefined;\n    if (typeof options === 'function') {\n      fn = options;\n      options = {};\n    }\n    const name = options.name || options.kind || fn.name;\n    return this._tracer.trace(name, options, fn);\n  }\n  wrap() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let fn = arguments.length > 1 ? arguments[1] : undefined;\n    if (typeof options === 'function') {\n      fn = options;\n      options = {};\n    }\n    const name = options.name || options.kind || fn.name;\n    return this._tracer.wrap(name, options, fn);\n  }\n  decorate() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const llmobs = this;\n    return function (target, ctxOrPropertyKey, descriptor) {\n      if (!ctxOrPropertyKey) return target;\n      if (typeof ctxOrPropertyKey === 'object') {\n        const ctx = ctxOrPropertyKey;\n        if (ctx.kind !== 'method') return target;\n        return llmobs.wrap({\n          name: ctx.name,\n          ...options\n        }, target);\n      } else {\n        const propertyKey = ctxOrPropertyKey;\n        if (descriptor) {\n          if (typeof descriptor.value !== 'function') return descriptor;\n          const original = descriptor.value;\n          descriptor.value = llmobs.wrap({\n            name: propertyKey,\n            ...options\n          }, original);\n          return descriptor;\n        } else {\n          if (typeof target[propertyKey] !== 'function') return target[propertyKey];\n          const original = target[propertyKey];\n          Object.defineProperty(target, propertyKey, {\n            ...Object.getOwnPropertyDescriptor(target, propertyKey),\n            value: llmobs.wrap({\n              name: propertyKey,\n              ...options\n            }, original)\n          });\n          return target;\n        }\n      }\n    };\n  }\n  annotate(span, options) {}\n  exportSpan(span) {\n    return {};\n  }\n  submitEvaluation(llmobsSpanContext, options) {}\n  flush() {}\n}\nmodule.exports = NoopLLMObs;","map":{"version":3,"names":["NoopLLMObs","constructor","noopTracer","_tracer","enabled","enable","options","disable","trace","arguments","length","undefined","fn","name","kind","wrap","decorate","llmobs","target","ctxOrPropertyKey","descriptor","ctx","propertyKey","value","original","Object","defineProperty","getOwnPropertyDescriptor","annotate","span","exportSpan","submitEvaluation","llmobsSpanContext","flush","module","exports"],"sources":["/Users/ibraheem.aboulnaga/rum-traces-example-app/node_modules/dd-trace/packages/dd-trace/src/llmobs/noop.js"],"sourcesContent":["'use strict'\n\nclass NoopLLMObs {\n  constructor (noopTracer) {\n    this._tracer = noopTracer\n  }\n\n  get enabled () {\n    return false\n  }\n\n  enable (options) {}\n\n  disable () {}\n\n  trace (options = {}, fn) {\n    if (typeof options === 'function') {\n      fn = options\n      options = {}\n    }\n\n    const name = options.name || options.kind || fn.name\n\n    return this._tracer.trace(name, options, fn)\n  }\n\n  wrap (options = {}, fn) {\n    if (typeof options === 'function') {\n      fn = options\n      options = {}\n    }\n\n    const name = options.name || options.kind || fn.name\n\n    return this._tracer.wrap(name, options, fn)\n  }\n\n  decorate (options = {}) {\n    const llmobs = this\n    return function (target, ctxOrPropertyKey, descriptor) {\n      if (!ctxOrPropertyKey) return target\n      if (typeof ctxOrPropertyKey === 'object') {\n        const ctx = ctxOrPropertyKey\n        if (ctx.kind !== 'method') return target\n\n        return llmobs.wrap({ name: ctx.name, ...options }, target)\n      } else {\n        const propertyKey = ctxOrPropertyKey\n        if (descriptor) {\n          if (typeof descriptor.value !== 'function') return descriptor\n\n          const original = descriptor.value\n          descriptor.value = llmobs.wrap({ name: propertyKey, ...options }, original)\n\n          return descriptor\n        } else {\n          if (typeof target[propertyKey] !== 'function') return target[propertyKey]\n\n          const original = target[propertyKey]\n          Object.defineProperty(target, propertyKey, {\n            ...Object.getOwnPropertyDescriptor(target, propertyKey),\n            value: llmobs.wrap({ name: propertyKey, ...options }, original)\n          })\n\n          return target\n        }\n      }\n    }\n  }\n\n  annotate (span, options) {}\n\n  exportSpan (span) {\n    return {}\n  }\n\n  submitEvaluation (llmobsSpanContext, options) {}\n\n  flush () {}\n}\n\nmodule.exports = NoopLLMObs\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,UAAU,CAAC;EACfC,WAAWA,CAAEC,UAAU,EAAE;IACvB,IAAI,CAACC,OAAO,GAAGD,UAAU;EAC3B;EAEA,IAAIE,OAAOA,CAAA,EAAI;IACb,OAAO,KAAK;EACd;EAEAC,MAAMA,CAAEC,OAAO,EAAE,CAAC;EAElBC,OAAOA,CAAA,EAAI,CAAC;EAEZC,KAAKA,CAAA,EAAoB;IAAA,IAAlBF,OAAO,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,IAAEG,EAAE,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IACrB,IAAI,OAAOL,OAAO,KAAK,UAAU,EAAE;MACjCM,EAAE,GAAGN,OAAO;MACZA,OAAO,GAAG,CAAC,CAAC;IACd;IAEA,MAAMO,IAAI,GAAGP,OAAO,CAACO,IAAI,IAAIP,OAAO,CAACQ,IAAI,IAAIF,EAAE,CAACC,IAAI;IAEpD,OAAO,IAAI,CAACV,OAAO,CAACK,KAAK,CAACK,IAAI,EAAEP,OAAO,EAAEM,EAAE,CAAC;EAC9C;EAEAG,IAAIA,CAAA,EAAoB;IAAA,IAAlBT,OAAO,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,IAAEG,EAAE,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IACpB,IAAI,OAAOL,OAAO,KAAK,UAAU,EAAE;MACjCM,EAAE,GAAGN,OAAO;MACZA,OAAO,GAAG,CAAC,CAAC;IACd;IAEA,MAAMO,IAAI,GAAGP,OAAO,CAACO,IAAI,IAAIP,OAAO,CAACQ,IAAI,IAAIF,EAAE,CAACC,IAAI;IAEpD,OAAO,IAAI,CAACV,OAAO,CAACY,IAAI,CAACF,IAAI,EAAEP,OAAO,EAAEM,EAAE,CAAC;EAC7C;EAEAI,QAAQA,CAAA,EAAgB;IAAA,IAAdV,OAAO,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACpB,MAAMQ,MAAM,GAAG,IAAI;IACnB,OAAO,UAAUC,MAAM,EAAEC,gBAAgB,EAAEC,UAAU,EAAE;MACrD,IAAI,CAACD,gBAAgB,EAAE,OAAOD,MAAM;MACpC,IAAI,OAAOC,gBAAgB,KAAK,QAAQ,EAAE;QACxC,MAAME,GAAG,GAAGF,gBAAgB;QAC5B,IAAIE,GAAG,CAACP,IAAI,KAAK,QAAQ,EAAE,OAAOI,MAAM;QAExC,OAAOD,MAAM,CAACF,IAAI,CAAC;UAAEF,IAAI,EAAEQ,GAAG,CAACR,IAAI;UAAE,GAAGP;QAAQ,CAAC,EAAEY,MAAM,CAAC;MAC5D,CAAC,MAAM;QACL,MAAMI,WAAW,GAAGH,gBAAgB;QACpC,IAAIC,UAAU,EAAE;UACd,IAAI,OAAOA,UAAU,CAACG,KAAK,KAAK,UAAU,EAAE,OAAOH,UAAU;UAE7D,MAAMI,QAAQ,GAAGJ,UAAU,CAACG,KAAK;UACjCH,UAAU,CAACG,KAAK,GAAGN,MAAM,CAACF,IAAI,CAAC;YAAEF,IAAI,EAAES,WAAW;YAAE,GAAGhB;UAAQ,CAAC,EAAEkB,QAAQ,CAAC;UAE3E,OAAOJ,UAAU;QACnB,CAAC,MAAM;UACL,IAAI,OAAOF,MAAM,CAACI,WAAW,CAAC,KAAK,UAAU,EAAE,OAAOJ,MAAM,CAACI,WAAW,CAAC;UAEzE,MAAME,QAAQ,GAAGN,MAAM,CAACI,WAAW,CAAC;UACpCG,MAAM,CAACC,cAAc,CAACR,MAAM,EAAEI,WAAW,EAAE;YACzC,GAAGG,MAAM,CAACE,wBAAwB,CAACT,MAAM,EAAEI,WAAW,CAAC;YACvDC,KAAK,EAAEN,MAAM,CAACF,IAAI,CAAC;cAAEF,IAAI,EAAES,WAAW;cAAE,GAAGhB;YAAQ,CAAC,EAAEkB,QAAQ;UAChE,CAAC,CAAC;UAEF,OAAON,MAAM;QACf;MACF;IACF,CAAC;EACH;EAEAU,QAAQA,CAAEC,IAAI,EAAEvB,OAAO,EAAE,CAAC;EAE1BwB,UAAUA,CAAED,IAAI,EAAE;IAChB,OAAO,CAAC,CAAC;EACX;EAEAE,gBAAgBA,CAAEC,iBAAiB,EAAE1B,OAAO,EAAE,CAAC;EAE/C2B,KAAKA,CAAA,EAAI,CAAC;AACZ;AAEAC,MAAM,CAACC,OAAO,GAAGnC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script"}