{"ast":null,"code":"var _a;\nimport { __assign } from \"tslib\";\nimport { BuildMode } from '../boot/init';\nimport { includes } from '../tools/utils';\nvar ENDPOINTS = {\n  alternate: {\n    logs: 'logs',\n    rum: 'rum',\n    sessionReplay: 'session-replay',\n    trace: 'trace'\n  },\n  classic: {\n    logs: 'browser',\n    rum: 'rum',\n    // session-replay has no classic endpoint\n    sessionReplay: undefined,\n    trace: 'public-trace'\n  }\n};\nexport var Datacenter = {\n  EU: 'eu',\n  US: 'us'\n};\nexport var INTAKE_SITE = (_a = {}, _a[Datacenter.EU] = 'datadoghq.eu', _a[Datacenter.US] = 'datadoghq.com', _a);\nvar CLASSIC_ALLOWED_SITES = [INTAKE_SITE[Datacenter.US], INTAKE_SITE[Datacenter.EU]];\nexport function computeTransportConfiguration(userConfiguration, buildEnv) {\n  var transportSettings = {\n    buildMode: buildEnv.buildMode,\n    clientToken: userConfiguration.clientToken,\n    env: userConfiguration.env,\n    proxyHost: userConfiguration.proxyHost,\n    sdkVersion: buildEnv.sdkVersion,\n    service: userConfiguration.service,\n    site: userConfiguration.site || INTAKE_SITE[userConfiguration.datacenter || buildEnv.datacenter],\n    version: userConfiguration.version\n  };\n  var intakeType = getIntakeType(transportSettings.site, userConfiguration);\n  var intakeUrls = getIntakeUrls(intakeType, transportSettings, userConfiguration.replica !== undefined);\n  var configuration = {\n    isIntakeUrl: function (url) {\n      return intakeUrls.some(function (intakeUrl) {\n        return url.indexOf(intakeUrl) === 0;\n      });\n    },\n    logsEndpoint: getEndpoint(intakeType, 'logs', transportSettings),\n    rumEndpoint: getEndpoint(intakeType, 'rum', transportSettings),\n    sessionReplayEndpoint: getEndpoint(intakeType, 'sessionReplay', transportSettings),\n    traceEndpoint: getEndpoint(intakeType, 'trace', transportSettings)\n  };\n  if (userConfiguration.internalMonitoringApiKey) {\n    configuration.internalMonitoringEndpoint = getEndpoint(intakeType, 'logs', transportSettings, 'browser-agent-internal-monitoring');\n  }\n  if (transportSettings.buildMode === BuildMode.E2E_TEST) {\n    configuration.internalMonitoringEndpoint = '<<< E2E INTERNAL MONITORING ENDPOINT >>>';\n    configuration.logsEndpoint = '<<< E2E LOGS ENDPOINT >>>';\n    configuration.rumEndpoint = '<<< E2E RUM ENDPOINT >>>';\n    configuration.sessionReplayEndpoint = '<<< E2E SESSION REPLAY ENDPOINT >>>';\n  }\n  if (transportSettings.buildMode === BuildMode.STAGING) {\n    if (userConfiguration.replica !== undefined) {\n      var replicaTransportSettings = __assign(__assign({}, transportSettings), {\n        applicationId: userConfiguration.replica.applicationId,\n        clientToken: userConfiguration.replica.clientToken,\n        site: INTAKE_SITE[Datacenter.US]\n      });\n      configuration.replica = {\n        applicationId: userConfiguration.replica.applicationId,\n        internalMonitoringEndpoint: getEndpoint(intakeType, 'logs', replicaTransportSettings, 'browser-agent-internal-monitoring'),\n        logsEndpoint: getEndpoint(intakeType, 'logs', replicaTransportSettings),\n        rumEndpoint: getEndpoint(intakeType, 'rum', replicaTransportSettings)\n      };\n    }\n  }\n  return configuration;\n}\nfunction getIntakeType(site, userConfiguration) {\n  return !userConfiguration.useAlternateIntakeDomains && includes(CLASSIC_ALLOWED_SITES, site) ? 'classic' : 'alternate';\n}\nfunction getIntakeUrls(intakeType, settings, withReplica) {\n  if (settings.proxyHost) {\n    return [\"https://\" + settings.proxyHost + \"/v1/input/\"];\n  }\n  var sites = [settings.site];\n  if (settings.buildMode === BuildMode.STAGING && withReplica) {\n    sites.push(INTAKE_SITE[Datacenter.US]);\n  }\n  var urls = [];\n  var endpointTypes = Object.keys(ENDPOINTS[intakeType]);\n  for (var _i = 0, sites_1 = sites; _i < sites_1.length; _i++) {\n    var site = sites_1[_i];\n    for (var _a = 0, endpointTypes_1 = endpointTypes; _a < endpointTypes_1.length; _a++) {\n      var endpointType = endpointTypes_1[_a];\n      urls.push(\"https://\" + getHost(intakeType, endpointType, site) + \"/v1/input/\");\n    }\n  }\n  return urls;\n}\nfunction getHost(intakeType, endpointType, site) {\n  return intakeType === 'classic' && getClassicHost(endpointType, site) || getAlternateHost(endpointType, site);\n}\nfunction getClassicHost(endpointType, site) {\n  var endpoint = ENDPOINTS.classic[endpointType];\n  return endpoint && endpoint + \"-http-intake.logs.\" + site;\n}\nfunction getAlternateHost(endpointType, site) {\n  var endpoint = ENDPOINTS.alternate[endpointType];\n  var domainParts = site.split('.');\n  var extension = domainParts.pop();\n  var suffix = domainParts.join('-') + \".\" + extension;\n  return endpoint + \".browser-intake-\" + suffix;\n}\nfunction getEndpoint(intakeType, endpointType, settings, source) {\n  var tags = \"sdk_version:\" + settings.sdkVersion + (\"\" + (settings.env ? \",env:\" + settings.env : '')) + (\"\" + (settings.service ? \",service:\" + settings.service : '')) + (\"\" + (settings.version ? \",version:\" + settings.version : ''));\n  var datadogHost = getHost(intakeType, endpointType, settings.site);\n  var host = settings.proxyHost ? settings.proxyHost : datadogHost;\n  var proxyParameter = settings.proxyHost ? \"ddhost=\" + datadogHost + \"&\" : '';\n  var parameters = proxyParameter + \"ddsource=\" + (source || 'browser') + \"&ddtags=\" + encodeURIComponent(tags);\n  return \"https://\" + host + \"/v1/input/\" + settings.clientToken + \"?\" + parameters;\n}","map":{"version":3,"names":["BuildMode","includes","ENDPOINTS","alternate","logs","rum","sessionReplay","trace","classic","undefined","Datacenter","EU","US","INTAKE_SITE","_a","CLASSIC_ALLOWED_SITES","computeTransportConfiguration","userConfiguration","buildEnv","transportSettings","buildMode","clientToken","env","proxyHost","sdkVersion","service","site","datacenter","version","intakeType","getIntakeType","intakeUrls","getIntakeUrls","replica","configuration","isIntakeUrl","url","some","intakeUrl","indexOf","logsEndpoint","getEndpoint","rumEndpoint","sessionReplayEndpoint","traceEndpoint","internalMonitoringApiKey","internalMonitoringEndpoint","E2E_TEST","STAGING","replicaTransportSettings","__assign","applicationId","useAlternateIntakeDomains","settings","withReplica","sites","push","urls","endpointTypes","Object","keys","_i","sites_1","length","endpointTypes_1","endpointType","getHost","getClassicHost","getAlternateHost","endpoint","domainParts","split","extension","pop","suffix","join","source","tags","datadogHost","host","proxyParameter","parameters","encodeURIComponent"],"sources":["../../src/domain/transportConfiguration.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}