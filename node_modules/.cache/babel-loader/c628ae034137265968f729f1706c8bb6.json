{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { W3CBaggagePropagator } from './baggage/propagation/W3CBaggagePropagator';\nexport { AnchoredClock } from './common/anchored-clock';\nexport { isAttributeKey, isAttributeValue, sanitizeAttributes } from './common/attributes';\nexport { globalErrorHandler, setGlobalErrorHandler } from './common/global-error-handler';\nexport { loggingErrorHandler } from './common/logging-error-handler';\nexport { addHrTimes, getTimeOrigin, hrTime, hrTimeDuration, hrTimeToMicroseconds, hrTimeToMilliseconds, hrTimeToNanoseconds, hrTimeToTimeStamp, isTimeInput, isTimeInputHrTime, millisToHrTime, timeInputToHrTime } from './common/time';\nexport { hexToBinary } from './common/hex-to-binary';\nexport { ExportResultCode } from './ExportResult';\nimport { getKeyPairs, serializeKeyPairs, parseKeyPairsIntoRecord, parsePairKeyValue } from './baggage/utils';\nexport var baggageUtils = {\n  getKeyPairs: getKeyPairs,\n  serializeKeyPairs: serializeKeyPairs,\n  parseKeyPairsIntoRecord: parseKeyPairsIntoRecord,\n  parsePairKeyValue: parsePairKeyValue\n};\nexport { RandomIdGenerator, SDK_INFO, _globalThis, getEnv, getEnvWithoutDefaults, hexToBase64, otperformance, unrefTimer } from './platform';\nexport { CompositePropagator } from './propagation/composite';\nexport { TRACE_PARENT_HEADER, TRACE_STATE_HEADER, W3CTraceContextPropagator, parseTraceParent } from './trace/W3CTraceContextPropagator';\nexport { RPCType, deleteRPCMetadata, getRPCMetadata, setRPCMetadata } from './trace/rpc-metadata';\nexport { AlwaysOffSampler } from './trace/sampler/AlwaysOffSampler';\nexport { AlwaysOnSampler } from './trace/sampler/AlwaysOnSampler';\nexport { ParentBasedSampler } from './trace/sampler/ParentBasedSampler';\nexport { TraceIdRatioBasedSampler } from './trace/sampler/TraceIdRatioBasedSampler';\nexport { isTracingSuppressed, suppressTracing, unsuppressTracing } from './trace/suppress-tracing';\nexport { TraceState } from './trace/TraceState';\nexport { DEFAULT_ATTRIBUTE_COUNT_LIMIT, DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT, DEFAULT_ENVIRONMENT, DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT, DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT, parseEnvironment } from './utils/environment';\nexport { merge } from './utils/merge';\nexport { TracesSamplerValues } from './utils/sampling';\nexport { TimeoutError, callWithTimeout } from './utils/timeout';\nexport { isUrlIgnored, urlMatches } from './utils/url';\nexport { isWrapped } from './utils/wrap';\nexport { BindOnceFuture } from './utils/callback';\nexport { VERSION } from './version';\nimport { _export } from './internal/exporter';\nexport var internal = {\n  _export: _export\n};","map":{"version":3,"names":["W3CBaggagePropagator","AnchoredClock","isAttributeKey","isAttributeValue","sanitizeAttributes","globalErrorHandler","setGlobalErrorHandler","loggingErrorHandler","addHrTimes","getTimeOrigin","hrTime","hrTimeDuration","hrTimeToMicroseconds","hrTimeToMilliseconds","hrTimeToNanoseconds","hrTimeToTimeStamp","isTimeInput","isTimeInputHrTime","millisToHrTime","timeInputToHrTime","hexToBinary","ExportResultCode","getKeyPairs","serializeKeyPairs","parseKeyPairsIntoRecord","parsePairKeyValue","baggageUtils","RandomIdGenerator","SDK_INFO","_globalThis","getEnv","getEnvWithoutDefaults","hexToBase64","otperformance","unrefTimer","CompositePropagator","TRACE_PARENT_HEADER","TRACE_STATE_HEADER","W3CTraceContextPropagator","parseTraceParent","RPCType","deleteRPCMetadata","getRPCMetadata","setRPCMetadata","AlwaysOffSampler","AlwaysOnSampler","ParentBasedSampler","TraceIdRatioBasedSampler","isTracingSuppressed","suppressTracing","unsuppressTracing","TraceState","DEFAULT_ATTRIBUTE_COUNT_LIMIT","DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT","DEFAULT_ENVIRONMENT","DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT","DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT","parseEnvironment","merge","TracesSamplerValues","TimeoutError","callWithTimeout","isUrlIgnored","urlMatches","isWrapped","BindOnceFuture","VERSION","_export","internal"],"sources":["../../src/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { W3CBaggagePropagator } from './baggage/propagation/W3CBaggagePropagator';\nexport { AnchoredClock, Clock } from './common/anchored-clock';\nexport {\n  isAttributeKey,\n  isAttributeValue,\n  sanitizeAttributes,\n} from './common/attributes';\nexport {\n  globalErrorHandler,\n  setGlobalErrorHandler,\n} from './common/global-error-handler';\nexport { loggingErrorHandler } from './common/logging-error-handler';\nexport {\n  addHrTimes,\n  getTimeOrigin,\n  hrTime,\n  hrTimeDuration,\n  hrTimeToMicroseconds,\n  hrTimeToMilliseconds,\n  hrTimeToNanoseconds,\n  hrTimeToTimeStamp,\n  isTimeInput,\n  isTimeInputHrTime,\n  millisToHrTime,\n  timeInputToHrTime,\n} from './common/time';\nexport {\n  ErrorHandler,\n  InstrumentationLibrary,\n  InstrumentationScope,\n  ShimWrapped,\n  TimeOriginLegacy,\n} from './common/types';\nexport { hexToBinary } from './common/hex-to-binary';\nexport { ExportResult, ExportResultCode } from './ExportResult';\nimport {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n} from './baggage/utils';\nexport const baggageUtils = {\n  getKeyPairs,\n  serializeKeyPairs,\n  parseKeyPairsIntoRecord,\n  parsePairKeyValue,\n};\nexport {\n  RandomIdGenerator,\n  SDK_INFO,\n  _globalThis,\n  getEnv,\n  getEnvWithoutDefaults,\n  hexToBase64,\n  otperformance,\n  unrefTimer,\n} from './platform';\nexport {\n  CompositePropagator,\n  CompositePropagatorConfig,\n} from './propagation/composite';\nexport {\n  TRACE_PARENT_HEADER,\n  TRACE_STATE_HEADER,\n  W3CTraceContextPropagator,\n  parseTraceParent,\n} from './trace/W3CTraceContextPropagator';\nexport { IdGenerator } from './trace/IdGenerator';\nexport {\n  RPCMetadata,\n  RPCType,\n  deleteRPCMetadata,\n  getRPCMetadata,\n  setRPCMetadata,\n} from './trace/rpc-metadata';\nexport { AlwaysOffSampler } from './trace/sampler/AlwaysOffSampler';\nexport { AlwaysOnSampler } from './trace/sampler/AlwaysOnSampler';\nexport { ParentBasedSampler } from './trace/sampler/ParentBasedSampler';\nexport { TraceIdRatioBasedSampler } from './trace/sampler/TraceIdRatioBasedSampler';\nexport {\n  isTracingSuppressed,\n  suppressTracing,\n  unsuppressTracing,\n} from './trace/suppress-tracing';\nexport { TraceState } from './trace/TraceState';\nexport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  DEFAULT_ENVIRONMENT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from './utils/environment';\nexport { merge } from './utils/merge';\nexport { TracesSamplerValues } from './utils/sampling';\nexport { TimeoutError, callWithTimeout } from './utils/timeout';\nexport { isUrlIgnored, urlMatches } from './utils/url';\nexport { isWrapped } from './utils/wrap';\nexport { BindOnceFuture } from './utils/callback';\nexport { VERSION } from './version';\nimport { _export } from './internal/exporter';\nexport const internal = {\n  _export,\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,oBAAoB,QAAQ,4CAA4C;AACjF,SAASC,aAAa,QAAe,yBAAyB;AAC9D,SACEC,cAAc,EACdC,gBAAgB,EAChBC,kBAAkB,QACb,qBAAqB;AAC5B,SACEC,kBAAkB,EAClBC,qBAAqB,QAChB,+BAA+B;AACtC,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SACEC,UAAU,EACVC,aAAa,EACbC,MAAM,EACNC,cAAc,EACdC,oBAAoB,EACpBC,oBAAoB,EACpBC,mBAAmB,EACnBC,iBAAiB,EACjBC,WAAW,EACXC,iBAAiB,EACjBC,cAAc,EACdC,iBAAiB,QACZ,eAAe;AAQtB,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAAuBC,gBAAgB,QAAQ,gBAAgB;AAC/D,SACEC,WAAW,EACXC,iBAAiB,EACjBC,uBAAuB,EACvBC,iBAAiB,QACZ,iBAAiB;AACxB,OAAO,IAAMC,YAAY,GAAG;EAC1BJ,WAAW,EAAAA,WAAA;EACXC,iBAAiB,EAAAA,iBAAA;EACjBC,uBAAuB,EAAAA,uBAAA;EACvBC,iBAAiB,EAAAA;CAClB;AACD,SACEE,iBAAiB,EACjBC,QAAQ,EACRC,WAAW,EACXC,MAAM,EACNC,qBAAqB,EACrBC,WAAW,EACXC,aAAa,EACbC,UAAU,QACL,YAAY;AACnB,SACEC,mBAAmB,QAEd,yBAAyB;AAChC,SACEC,mBAAmB,EACnBC,kBAAkB,EAClBC,yBAAyB,EACzBC,gBAAgB,QACX,mCAAmC;AAE1C,SAEEC,OAAO,EACPC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,QACT,sBAAsB;AAC7B,SAASC,gBAAgB,QAAQ,kCAAkC;AACnE,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,kBAAkB,QAAQ,oCAAoC;AACvE,SAASC,wBAAwB,QAAQ,0CAA0C;AACnF,SACEC,mBAAmB,EACnBC,eAAe,EACfC,iBAAiB,QACZ,0BAA0B;AACjC,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SACEC,6BAA6B,EAC7BC,oCAAoC,EACpCC,mBAAmB,EACnBC,4CAA4C,EAC5CC,2CAA2C,EAG3CC,gBAAgB,QACX,qBAAqB;AAC5B,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,SAASC,YAAY,EAAEC,eAAe,QAAQ,iBAAiB;AAC/D,SAASC,YAAY,EAAEC,UAAU,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,OAAO,IAAMC,QAAQ,GAAG;EACtBD,OAAO,EAAAA;CACR","ignoreList":[]},"metadata":{},"sourceType":"module"}