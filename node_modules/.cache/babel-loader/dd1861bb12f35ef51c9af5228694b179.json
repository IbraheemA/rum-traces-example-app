{"ast":null,"code":"import { monitor } from '@datadog/browser-core';\nexport function createDOMMutationObservable() {\n  var callbacks = [];\n  var MutationObserver = getMutationObserverConstructor();\n  var observer = MutationObserver ? new MutationObserver(monitor(notify)) : undefined;\n  function notify() {\n    callbacks.forEach(function (callback) {\n      return callback();\n    });\n  }\n  function startDOMObservation() {\n    if (!observer) {\n      return;\n    }\n    observer.observe(document, {\n      attributes: true,\n      characterData: true,\n      childList: true,\n      subtree: true\n    });\n  }\n  function stopDOMObservation() {\n    if (!observer) {\n      return;\n    }\n    observer.disconnect();\n  }\n  return {\n    subscribe: function (callback) {\n      if (!callbacks.length) {\n        startDOMObservation();\n      }\n      callbacks.push(callback);\n      return {\n        unsubscribe: function () {\n          callbacks = callbacks.filter(function (other) {\n            return callback !== other;\n          });\n          if (!callbacks.length) {\n            stopDOMObservation();\n          }\n        }\n      };\n    }\n  };\n}\nexport function getMutationObserverConstructor() {\n  var constructor;\n  var browserWindow = window;\n  // Angular uses Zone.js to provide a context persisting accross async tasks.  Zone.js replaces the\n  // global MutationObserver constructor with a patched version to support the context propagation.\n  // There is an ongoing issue[1][2] with this setup when using a MutationObserver within a Angular\n  // component: on some occasions, the callback is being called in an infinite loop, causing the\n  // page to freeze (even if the callback is completely empty).\n  //\n  // To work around this issue, we are using the Zone __symbol__ API to get the original, unpatched\n  // MutationObserver constructor.\n  //\n  // [1] https://github.com/angular/angular/issues/26948\n  // [2] https://github.com/angular/angular/issues/31712\n  if (browserWindow.Zone) {\n    var symbol = browserWindow.Zone.__symbol__('MutationObserver');\n    constructor = browserWindow[symbol];\n  }\n  if (!constructor) {\n    constructor = browserWindow.MutationObserver;\n  }\n  return constructor;\n}","map":{"version":3,"names":["monitor","createDOMMutationObservable","callbacks","MutationObserver","getMutationObserverConstructor","observer","notify","undefined","forEach","callback","startDOMObservation","observe","document","attributes","characterData","childList","subtree","stopDOMObservation","disconnect","subscribe","length","push","unsubscribe","filter","other","constructor","browserWindow","window","Zone","symbol","__symbol__"],"sources":["../../src/browser/domMutationObservable.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,OAAO,QAAsB,uBAAuB;AAM7D,OAAM,SAAUC,2BAA2BA,CAAA;EACzC,IAAIC,SAAS,GAAsB,EAAE;EACrC,IAAMC,gBAAgB,GAAGC,8BAA8B,EAAE;EACzD,IAAMC,QAAQ,GAAGF,gBAAgB,GAAG,IAAIA,gBAAgB,CAACH,OAAO,CAACM,MAAM,CAAC,CAAC,GAAGC,SAAS;EAErF,SAASD,MAAMA,CAAA;IACbJ,SAAS,CAACM,OAAO,CAAC,UAACC,QAAQ;MAAK,OAAAA,QAAQ,EAAE;IAAV,CAAU,CAAC;EAC7C;EAEA,SAASC,mBAAmBA,CAAA;IAC1B,IAAI,CAACL,QAAQ,EAAE;MACb;;IAGFA,QAAQ,CAACM,OAAO,CAACC,QAAQ,EAAE;MACzBC,UAAU,EAAE,IAAI;MAChBC,aAAa,EAAE,IAAI;MACnBC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;KACV,CAAC;EACJ;EAEA,SAASC,kBAAkBA,CAAA;IACzB,IAAI,CAACZ,QAAQ,EAAE;MACb;;IAGFA,QAAQ,CAACa,UAAU,EAAE;EACvB;EAEA,OAAO;IACLC,SAAS,EAAE,SAAAA,CAACV,QAAQ;MAClB,IAAI,CAACP,SAAS,CAACkB,MAAM,EAAE;QACrBV,mBAAmB,EAAE;;MAGvBR,SAAS,CAACmB,IAAI,CAACZ,QAAQ,CAAC;MACxB,OAAO;QACLa,WAAW,EAAE,SAAAA,CAAA;UACXpB,SAAS,GAAGA,SAAS,CAACqB,MAAM,CAAC,UAACC,KAAK;YAAK,OAAAf,QAAQ,KAAKe,KAAK;UAAlB,CAAkB,CAAC;UAE3D,IAAI,CAACtB,SAAS,CAACkB,MAAM,EAAE;YACrBH,kBAAkB,EAAE;;QAExB;OACD;IACH;GACD;AACH;AAUA,OAAM,SAAUb,8BAA8BA,CAAA;EAC5C,IAAIqB,WAAoD;EACxD,IAAMC,aAAa,GAAkBC,MAAM;EAE3C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAID,aAAa,CAACE,IAAI,EAAE;IACtB,IAAMC,MAAM,GAAGH,aAAa,CAACE,IAAI,CAACE,UAAU,CAAC,kBAAkB,CAAC;IAChEL,WAAW,GAAGC,aAAa,CAACG,MAAa,CAAQ;;EAGnD,IAAI,CAACJ,WAAW,EAAE;IAChBA,WAAW,GAAGC,aAAa,CAACvB,gBAAgB;;EAG9C,OAAOsB,WAAW;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module"}