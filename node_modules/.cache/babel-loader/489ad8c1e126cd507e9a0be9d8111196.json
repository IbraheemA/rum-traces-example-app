{"ast":null,"code":"import { toValidEntry } from './resourceUtils';\n/**\n * Look for corresponding timing in resource timing buffer\n *\n * Observations:\n * - Timing (start, end) are nested inside the request (start, end)\n * - Some timing can be not exactly nested, being off by < 1 ms\n * - Browsers generate a timing entry for OPTIONS request\n *\n * Strategy:\n * - from valid nested entries (with 1 ms error margin)\n * - if a single timing match, return the timing\n * - if two following timings match (OPTIONS request), return the timing for the actual request\n * - otherwise we can't decide, return undefined\n */\nexport function matchRequestTiming(request) {\n  if (!performance || !('getEntriesByName' in performance)) {\n    return;\n  }\n  var sameNameEntries = performance.getEntriesByName(request.url, 'resource');\n  if (!sameNameEntries.length || !('toJSON' in sameNameEntries[0])) {\n    return;\n  }\n  var candidates = sameNameEntries.map(function (entry) {\n    return entry.toJSON();\n  }).filter(toValidEntry).filter(function (entry) {\n    return isBetween(entry, request.startClocks.relative, endTime({\n      startTime: request.startClocks.relative,\n      duration: request.duration\n    }));\n  });\n  if (candidates.length === 1) {\n    return candidates[0];\n  }\n  if (candidates.length === 2 && firstCanBeOptionRequest(candidates)) {\n    return candidates[1];\n  }\n  return;\n}\nfunction firstCanBeOptionRequest(correspondingEntries) {\n  return endTime(correspondingEntries[0]) <= correspondingEntries[1].startTime;\n}\nfunction endTime(timing) {\n  // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n  return timing.startTime + timing.duration;\n}\nfunction isBetween(timing, start, end) {\n  var errorMargin = 1;\n  // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n  return timing.startTime >= start - errorMargin && endTime(timing) <= end + errorMargin;\n}","map":{"version":3,"names":["toValidEntry","matchRequestTiming","request","performance","sameNameEntries","getEntriesByName","url","length","candidates","map","entry","toJSON","filter","isBetween","startClocks","relative","endTime","startTime","duration","firstCanBeOptionRequest","correspondingEntries","timing","start","end","errorMargin"],"sources":["../../../../src/domain/rumEventsCollection/resource/matchRequestTiming.ts"],"sourcesContent":[null],"mappings":"AAGA,SAASA,YAAY,QAAQ,iBAAiB;AAO9C;;;;;;;;;;;;;;AAcA,OAAM,SAAUC,kBAAkBA,CAACC,OAA6B;EAC9D,IAAI,CAACC,WAAW,IAAI,EAAE,kBAAkB,IAAIA,WAAW,CAAC,EAAE;IACxD;;EAEF,IAAMC,eAAe,GAAGD,WAAW,CAACE,gBAAgB,CAACH,OAAO,CAACI,GAAG,EAAE,UAAU,CAAC;EAE7E,IAAI,CAACF,eAAe,CAACG,MAAM,IAAI,EAAE,QAAQ,IAAIH,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE;IAChE;;EAGF,IAAMI,UAAU,GAAGJ,eAAe,CAC/BK,GAAG,CAAC,UAACC,KAAK;IAAK,OAAAA,KAAK,CAACC,MAAM,EAAkC;EAA9C,CAA8C,CAAC,CAC9DC,MAAM,CAACZ,YAAY,CAAC,CACpBY,MAAM,CAAC,UAACF,KAAK;IACZ,OAAAG,SAAS,CACPH,KAAK,EACLR,OAAO,CAACY,WAAW,CAACC,QAAQ,EAC5BC,OAAO,CAAC;MAAEC,SAAS,EAAEf,OAAO,CAACY,WAAW,CAACC,QAAQ;MAAEG,QAAQ,EAAEhB,OAAO,CAACgB;IAAQ,CAAE,CAAC,CACjF;EAJD,CAIC,CACF;EAEH,IAAIV,UAAU,CAACD,MAAM,KAAK,CAAC,EAAE;IAC3B,OAAOC,UAAU,CAAC,CAAC,CAAC;;EAGtB,IAAIA,UAAU,CAACD,MAAM,KAAK,CAAC,IAAIY,uBAAuB,CAACX,UAAU,CAAC,EAAE;IAClE,OAAOA,UAAU,CAAC,CAAC,CAAC;;EAGtB;AACF;AAEA,SAASW,uBAAuBA,CAACC,oBAAoD;EACnF,OAAOJ,OAAO,CAACI,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAIA,oBAAoB,CAAC,CAAC,CAAC,CAACH,SAAS;AAC9E;AAEA,SAASD,OAAOA,CAACK,MAAc;EAC7B;EACA,OAAQA,MAAM,CAACJ,SAAS,GAAGI,MAAM,CAACH,QAAQ;AAC5C;AAEA,SAASL,SAASA,CAACQ,MAAc,EAAEC,KAAmB,EAAEC,GAAiB;EACvE,IAAMC,WAAW,GAAG,CAAC;EACrB;EACA,OAAOH,MAAM,CAACJ,SAAS,IAAIK,KAAK,GAAGE,WAAW,IAAIR,OAAO,CAACK,MAAM,CAAC,IAAIE,GAAG,GAAGC,WAAW;AACxF","ignoreList":[]},"metadata":{},"sourceType":"module"}