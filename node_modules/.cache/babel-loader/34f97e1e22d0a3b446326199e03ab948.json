{"ast":null,"code":"import { BoundedBuffer, buildCookieOptions, checkCookiesAuthorized, checkIsNotLocalFile, createContextManager, deepClone, ErrorSource, isPercentage, makePublicApi, monitor, clocksNow, timeStampNow, display, commonInit } from '@datadog/browser-core';\nimport { ActionType } from '../rawRumEvent.types';\nimport { buildEnv } from './buildEnv';\nexport function makeRumPublicApi(startRumImpl) {\n  var isAlreadyInitialized = false;\n  var globalContextManager = createContextManager();\n  var user = {};\n  var getInternalContextStrategy = function () {\n    return undefined;\n  };\n  var bufferApiCalls = new BoundedBuffer();\n  var addTimingStrategy = function (name, time) {\n    if (time === void 0) {\n      time = timeStampNow();\n    }\n    bufferApiCalls.add(function () {\n      return addTimingStrategy(name, time);\n    });\n  };\n  var startViewStrategy = function (name, startClocks) {\n    if (startClocks === void 0) {\n      startClocks = clocksNow();\n    }\n    bufferApiCalls.add(function () {\n      return startViewStrategy(name, startClocks);\n    });\n  };\n  var addActionStrategy = function (action, commonContext) {\n    if (commonContext === void 0) {\n      commonContext = clonedCommonContext();\n    }\n    bufferApiCalls.add(function () {\n      return addActionStrategy(action, commonContext);\n    });\n  };\n  var addErrorStrategy = function (providedError, commonContext) {\n    if (commonContext === void 0) {\n      commonContext = clonedCommonContext();\n    }\n    bufferApiCalls.add(function () {\n      return addErrorStrategy(providedError, commonContext);\n    });\n  };\n  function clonedCommonContext() {\n    return deepClone({\n      context: globalContextManager.get(),\n      user: user\n    });\n  }\n  function initRum(userConfiguration) {\n    if (!checkCookiesAuthorized(buildCookieOptions(userConfiguration)) || !checkIsNotLocalFile() || !canInitRum(userConfiguration)) {\n      return;\n    }\n    if (userConfiguration.publicApiKey) {\n      userConfiguration.clientToken = userConfiguration.publicApiKey;\n    }\n    var _a = commonInit(userConfiguration, buildEnv),\n      configuration = _a.configuration,\n      internalMonitoring = _a.internalMonitoring;\n    if (!configuration.isEnabled('view-renaming') || !configuration.trackViewsManually) {\n      doStartRum();\n    } else {\n      // drain beforeInitCalls by buffering them until we start RUM\n      // if we get a startView, drain re-buffered calls before continuing to drain beforeInitCalls\n      // in order to ensure that calls are processed in order\n      var beforeInitCalls = bufferApiCalls;\n      bufferApiCalls = new BoundedBuffer();\n      startViewStrategy = function (name) {\n        doStartRum(name);\n      };\n      beforeInitCalls.drain();\n    }\n    isAlreadyInitialized = true;\n    function doStartRum(initialViewName) {\n      var _a;\n      var startView;\n      _a = startRumImpl(userConfiguration, configuration, internalMonitoring, function () {\n        return {\n          user: user,\n          context: globalContextManager.get()\n        };\n      }, initialViewName), startView = _a.startView, addActionStrategy = _a.addAction, addErrorStrategy = _a.addError, addTimingStrategy = _a.addTiming, getInternalContextStrategy = _a.getInternalContext;\n      if (configuration.isEnabled('view-renaming')) {\n        startViewStrategy = startView;\n      }\n      bufferApiCalls.drain();\n    }\n  }\n  var rumPublicApi = makePublicApi({\n    init: monitor(initRum),\n    addRumGlobalContext: monitor(globalContextManager.add),\n    removeRumGlobalContext: monitor(globalContextManager.remove),\n    getRumGlobalContext: monitor(globalContextManager.get),\n    setRumGlobalContext: monitor(globalContextManager.set),\n    getInternalContext: monitor(function (startTime) {\n      return getInternalContextStrategy(startTime);\n    }),\n    addAction: monitor(function (name, context) {\n      addActionStrategy({\n        name: name,\n        context: deepClone(context),\n        startClocks: clocksNow(),\n        type: ActionType.CUSTOM\n      });\n    }),\n    /**\n     * @deprecated use addAction instead\n     */\n    addUserAction: function (name, context) {\n      rumPublicApi.addAction(name, context);\n    },\n    addError: monitor(function (error, context, source) {\n      if (source === void 0) {\n        source = ErrorSource.CUSTOM;\n      }\n      var checkedSource;\n      if (source === ErrorSource.CUSTOM || source === ErrorSource.NETWORK || source === ErrorSource.SOURCE) {\n        checkedSource = source;\n      } else {\n        display.error(\"DD_RUM.addError: Invalid source '\" + source + \"'\");\n        checkedSource = ErrorSource.CUSTOM;\n      }\n      addErrorStrategy({\n        error: error,\n        context: deepClone(context),\n        source: checkedSource,\n        startClocks: clocksNow()\n      });\n    }),\n    addTiming: monitor(function (name) {\n      addTimingStrategy(name);\n    }),\n    setUser: monitor(function (newUser) {\n      var sanitizedUser = sanitizeUser(newUser);\n      if (sanitizedUser) {\n        user = sanitizedUser;\n      } else {\n        display.error('Unsupported user:', newUser);\n      }\n    }),\n    removeUser: monitor(function () {\n      user = {};\n    })\n  });\n  rumPublicApi['startView'] = monitor(function (name) {\n    startViewStrategy(name);\n  });\n  return rumPublicApi;\n  function sanitizeUser(newUser) {\n    if (typeof newUser !== 'object' || !newUser) {\n      return;\n    }\n    var result = deepClone(newUser);\n    if ('id' in result) {\n      result.id = String(result.id);\n    }\n    if ('name' in result) {\n      result.name = String(result.name);\n    }\n    if ('email' in result) {\n      result.email = String(result.email);\n    }\n    return result;\n  }\n  function canInitRum(userConfiguration) {\n    if (isAlreadyInitialized) {\n      if (!userConfiguration.silentMultipleInit) {\n        display.error('DD_RUM is already initialized.');\n      }\n      return false;\n    }\n    if (!userConfiguration || !userConfiguration.clientToken && !userConfiguration.publicApiKey) {\n      display.error('Client Token is not configured, we will not send any data.');\n      return false;\n    }\n    if (!userConfiguration.applicationId) {\n      display.error('Application ID is not configured, no RUM data will be collected.');\n      return false;\n    }\n    if (userConfiguration.sampleRate !== undefined && !isPercentage(userConfiguration.sampleRate)) {\n      display.error('Sample Rate should be a number between 0 and 100');\n      return false;\n    }\n    if (userConfiguration.resourceSampleRate !== undefined && !isPercentage(userConfiguration.resourceSampleRate)) {\n      display.error('Resource Sample Rate should be a number between 0 and 100');\n      return false;\n    }\n    if (Array.isArray(userConfiguration.allowedTracingOrigins) && userConfiguration.allowedTracingOrigins.length !== 0 && userConfiguration.service === undefined) {\n      display.error('Service need to be configured when tracing is enabled');\n      return false;\n    }\n    return true;\n  }\n}","map":{"version":3,"names":["BoundedBuffer","buildCookieOptions","checkCookiesAuthorized","checkIsNotLocalFile","createContextManager","deepClone","ErrorSource","isPercentage","makePublicApi","monitor","clocksNow","timeStampNow","display","commonInit","ActionType","buildEnv","makeRumPublicApi","startRumImpl","isAlreadyInitialized","globalContextManager","user","getInternalContextStrategy","undefined","bufferApiCalls","addTimingStrategy","name","time","add","startViewStrategy","startClocks","addActionStrategy","action","commonContext","clonedCommonContext","addErrorStrategy","providedError","context","get","initRum","userConfiguration","canInitRum","publicApiKey","clientToken","_a","configuration","internalMonitoring","isEnabled","trackViewsManually","doStartRum","beforeInitCalls","drain","initialViewName","startView","addAction","addError","addTiming","getInternalContext","rumPublicApi","init","addRumGlobalContext","removeRumGlobalContext","remove","getRumGlobalContext","setRumGlobalContext","set","startTime","type","CUSTOM","addUserAction","error","source","checkedSource","NETWORK","SOURCE","setUser","newUser","sanitizedUser","sanitizeUser","removeUser","result","id","String","email","silentMultipleInit","applicationId","sampleRate","resourceSampleRate","Array","isArray","allowedTracingOrigins","length","service"],"sources":["../../src/boot/rumPublicApi.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}